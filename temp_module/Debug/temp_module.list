
temp_module.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001108  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001238  08001238  00002238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800127c  0800127c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000000  0800127c  0800127c  0000305c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800127c  0800127c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800127c  0800127c  0000227c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001280  08001280  00002280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001284  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080012e0  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080012e0  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000964  00000000  00000000  00003085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000366  00000000  00000000  000039e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00003d50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000be  00000000  00000000  00003e68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002b60  00000000  00000000  00003f26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001483  00000000  00000000  00006a86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009709  00000000  00000000  00007f09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011612  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b34  00000000  00000000  00011658  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  0001218c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08001220 	.word	0x08001220

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08001220 	.word	0x08001220

08000170 <delay_ms>:
  ******************************************************************************
*/

#include<stdio.h>
#include<stdint.h>
void delay_ms() {
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
    for (uint32_t i = 0; i <500000;i++);
 8000176:	2300      	movs	r3, #0
 8000178:	607b      	str	r3, [r7, #4]
 800017a:	e002      	b.n	8000182 <delay_ms+0x12>
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	3301      	adds	r3, #1
 8000180:	607b      	str	r3, [r7, #4]
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	4a04      	ldr	r2, [pc, #16]	@ (8000198 <delay_ms+0x28>)
 8000186:	4293      	cmp	r3, r2
 8000188:	d9f8      	bls.n	800017c <delay_ms+0xc>
}
 800018a:	bf00      	nop
 800018c:	bf00      	nop
 800018e:	370c      	adds	r7, #12
 8000190:	46bd      	mov	sp, r7
 8000192:	bc80      	pop	{r7}
 8000194:	4770      	bx	lr
 8000196:	bf00      	nop
 8000198:	0007a11f 	.word	0x0007a11f

0800019c <main>:
int main(void)
{
 800019c:	b580      	push	{r7, lr}
 800019e:	b084      	sub	sp, #16
 80001a0:	af00      	add	r7, sp, #0
	uint32_t *pClkctrlreg =(uint32_t*)0x40021018;
 80001a2:	4b18      	ldr	r3, [pc, #96]	@ (8000204 <main+0x68>)
 80001a4:	60fb      	str	r3, [r7, #12]
	uint32_t *pPortDmodereg =(uint32_t*)0x40011004;
 80001a6:	4b18      	ldr	r3, [pc, #96]	@ (8000208 <main+0x6c>)
 80001a8:	60bb      	str	r3, [r7, #8]
	uint32_t *pPortDoutreg =(uint32_t*)0x4001100C;
 80001aa:	4b18      	ldr	r3, [pc, #96]	@ (800020c <main+0x70>)
 80001ac:	607b      	str	r3, [r7, #4]



	//set clock to 1(pin 12) GPIOD and GPIOA
	*pClkctrlreg |=(1<<4);
 80001ae:	68fb      	ldr	r3, [r7, #12]
 80001b0:	681b      	ldr	r3, [r3, #0]
 80001b2:	f043 0210 	orr.w	r2, r3, #16
 80001b6:	68fb      	ldr	r3, [r7, #12]
 80001b8:	601a      	str	r2, [r3, #0]
	//*pClkctrlreg |=0x1;
	//set mode to 01 general output
	*pPortDmodereg &= ~(0xF << 20); ;
 80001ba:	68bb      	ldr	r3, [r7, #8]
 80001bc:	681b      	ldr	r3, [r3, #0]
 80001be:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 80001c2:	68bb      	ldr	r3, [r7, #8]
 80001c4:	601a      	str	r2, [r3, #0]
	*pPortDmodereg  |= (0x1 << 20);
 80001c6:	68bb      	ldr	r3, [r7, #8]
 80001c8:	681b      	ldr	r3, [r3, #0]
 80001ca:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80001ce:	68bb      	ldr	r3, [r7, #8]
 80001d0:	601a      	str	r2, [r3, #0]
	//setting input mode for GPIOA
	while(1){
	*pPortDoutreg |=(1 << 13);
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	681b      	ldr	r3, [r3, #0]
 80001d6:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	601a      	str	r2, [r3, #0]
	delay_ms();
 80001de:	f7ff ffc7 	bl	8000170 <delay_ms>
	printf("LED ON");
 80001e2:	480b      	ldr	r0, [pc, #44]	@ (8000210 <main+0x74>)
 80001e4:	f000 f9a4 	bl	8000530 <iprintf>
	*pPortDoutreg &=~(1 << 13);
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	601a      	str	r2, [r3, #0]
	delay_ms();
 80001f4:	f7ff ffbc 	bl	8000170 <delay_ms>
	printf("LED OFF");
 80001f8:	4806      	ldr	r0, [pc, #24]	@ (8000214 <main+0x78>)
 80001fa:	f000 f999 	bl	8000530 <iprintf>
	*pPortDoutreg |=(1 << 13);
 80001fe:	bf00      	nop
 8000200:	e7e7      	b.n	80001d2 <main+0x36>
 8000202:	bf00      	nop
 8000204:	40021018 	.word	0x40021018
 8000208:	40011004 	.word	0x40011004
 800020c:	4001100c 	.word	0x4001100c
 8000210:	08001238 	.word	0x08001238
 8000214:	08001240 	.word	0x08001240

08000218 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	b086      	sub	sp, #24
 800021c:	af00      	add	r7, sp, #0
 800021e:	60f8      	str	r0, [r7, #12]
 8000220:	60b9      	str	r1, [r7, #8]
 8000222:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000224:	2300      	movs	r3, #0
 8000226:	617b      	str	r3, [r7, #20]
 8000228:	e00a      	b.n	8000240 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800022a:	f3af 8000 	nop.w
 800022e:	4601      	mov	r1, r0
 8000230:	68bb      	ldr	r3, [r7, #8]
 8000232:	1c5a      	adds	r2, r3, #1
 8000234:	60ba      	str	r2, [r7, #8]
 8000236:	b2ca      	uxtb	r2, r1
 8000238:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	697b      	ldr	r3, [r7, #20]
 800023c:	3301      	adds	r3, #1
 800023e:	617b      	str	r3, [r7, #20]
 8000240:	697a      	ldr	r2, [r7, #20]
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	429a      	cmp	r2, r3
 8000246:	dbf0      	blt.n	800022a <_read+0x12>
  }

  return len;
 8000248:	687b      	ldr	r3, [r7, #4]
}
 800024a:	4618      	mov	r0, r3
 800024c:	3718      	adds	r7, #24
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}

08000252 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000252:	b580      	push	{r7, lr}
 8000254:	b086      	sub	sp, #24
 8000256:	af00      	add	r7, sp, #0
 8000258:	60f8      	str	r0, [r7, #12]
 800025a:	60b9      	str	r1, [r7, #8]
 800025c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800025e:	2300      	movs	r3, #0
 8000260:	617b      	str	r3, [r7, #20]
 8000262:	e009      	b.n	8000278 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000264:	68bb      	ldr	r3, [r7, #8]
 8000266:	1c5a      	adds	r2, r3, #1
 8000268:	60ba      	str	r2, [r7, #8]
 800026a:	781b      	ldrb	r3, [r3, #0]
 800026c:	4618      	mov	r0, r3
 800026e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000272:	697b      	ldr	r3, [r7, #20]
 8000274:	3301      	adds	r3, #1
 8000276:	617b      	str	r3, [r7, #20]
 8000278:	697a      	ldr	r2, [r7, #20]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	429a      	cmp	r2, r3
 800027e:	dbf1      	blt.n	8000264 <_write+0x12>
  }
  return len;
 8000280:	687b      	ldr	r3, [r7, #4]
}
 8000282:	4618      	mov	r0, r3
 8000284:	3718      	adds	r7, #24
 8000286:	46bd      	mov	sp, r7
 8000288:	bd80      	pop	{r7, pc}

0800028a <_close>:

int _close(int file)
{
 800028a:	b480      	push	{r7}
 800028c:	b083      	sub	sp, #12
 800028e:	af00      	add	r7, sp, #0
 8000290:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000292:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000296:	4618      	mov	r0, r3
 8000298:	370c      	adds	r7, #12
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr

080002a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002aa:	683b      	ldr	r3, [r7, #0]
 80002ac:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80002b0:	605a      	str	r2, [r3, #4]
  return 0;
 80002b2:	2300      	movs	r3, #0
}
 80002b4:	4618      	mov	r0, r3
 80002b6:	370c      	adds	r7, #12
 80002b8:	46bd      	mov	sp, r7
 80002ba:	bc80      	pop	{r7}
 80002bc:	4770      	bx	lr

080002be <_isatty>:

int _isatty(int file)
{
 80002be:	b480      	push	{r7}
 80002c0:	b083      	sub	sp, #12
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002c6:	2301      	movs	r3, #1
}
 80002c8:	4618      	mov	r0, r3
 80002ca:	370c      	adds	r7, #12
 80002cc:	46bd      	mov	sp, r7
 80002ce:	bc80      	pop	{r7}
 80002d0:	4770      	bx	lr

080002d2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002d2:	b480      	push	{r7}
 80002d4:	b085      	sub	sp, #20
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	60f8      	str	r0, [r7, #12]
 80002da:	60b9      	str	r1, [r7, #8]
 80002dc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002de:	2300      	movs	r3, #0
}
 80002e0:	4618      	mov	r0, r3
 80002e2:	3714      	adds	r7, #20
 80002e4:	46bd      	mov	sp, r7
 80002e6:	bc80      	pop	{r7}
 80002e8:	4770      	bx	lr
	...

080002ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002f4:	4a14      	ldr	r2, [pc, #80]	@ (8000348 <_sbrk+0x5c>)
 80002f6:	4b15      	ldr	r3, [pc, #84]	@ (800034c <_sbrk+0x60>)
 80002f8:	1ad3      	subs	r3, r2, r3
 80002fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002fc:	697b      	ldr	r3, [r7, #20]
 80002fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000300:	4b13      	ldr	r3, [pc, #76]	@ (8000350 <_sbrk+0x64>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	2b00      	cmp	r3, #0
 8000306:	d102      	bne.n	800030e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000308:	4b11      	ldr	r3, [pc, #68]	@ (8000350 <_sbrk+0x64>)
 800030a:	4a12      	ldr	r2, [pc, #72]	@ (8000354 <_sbrk+0x68>)
 800030c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800030e:	4b10      	ldr	r3, [pc, #64]	@ (8000350 <_sbrk+0x64>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4413      	add	r3, r2
 8000316:	693a      	ldr	r2, [r7, #16]
 8000318:	429a      	cmp	r2, r3
 800031a:	d207      	bcs.n	800032c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800031c:	f000 f9ac 	bl	8000678 <__errno>
 8000320:	4603      	mov	r3, r0
 8000322:	220c      	movs	r2, #12
 8000324:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000326:	f04f 33ff 	mov.w	r3, #4294967295
 800032a:	e009      	b.n	8000340 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800032c:	4b08      	ldr	r3, [pc, #32]	@ (8000350 <_sbrk+0x64>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000332:	4b07      	ldr	r3, [pc, #28]	@ (8000350 <_sbrk+0x64>)
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4413      	add	r3, r2
 800033a:	4a05      	ldr	r2, [pc, #20]	@ (8000350 <_sbrk+0x64>)
 800033c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800033e:	68fb      	ldr	r3, [r7, #12]
}
 8000340:	4618      	mov	r0, r3
 8000342:	3718      	adds	r7, #24
 8000344:	46bd      	mov	sp, r7
 8000346:	bd80      	pop	{r7, pc}
 8000348:	20005000 	.word	0x20005000
 800034c:	00000400 	.word	0x00000400
 8000350:	20000078 	.word	0x20000078
 8000354:	200001c8 	.word	0x200001c8

08000358 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000358:	480d      	ldr	r0, [pc, #52]	@ (8000390 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800035a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800035c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000360:	480c      	ldr	r0, [pc, #48]	@ (8000394 <LoopForever+0x6>)
  ldr r1, =_edata
 8000362:	490d      	ldr	r1, [pc, #52]	@ (8000398 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000364:	4a0d      	ldr	r2, [pc, #52]	@ (800039c <LoopForever+0xe>)
  movs r3, #0
 8000366:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000368:	e002      	b.n	8000370 <LoopCopyDataInit>

0800036a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800036a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800036c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036e:	3304      	adds	r3, #4

08000370 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000370:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000372:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000374:	d3f9      	bcc.n	800036a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000376:	4a0a      	ldr	r2, [pc, #40]	@ (80003a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000378:	4c0a      	ldr	r4, [pc, #40]	@ (80003a4 <LoopForever+0x16>)
  movs r3, #0
 800037a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800037c:	e001      	b.n	8000382 <LoopFillZerobss>

0800037e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000380:	3204      	adds	r2, #4

08000382 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000382:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000384:	d3fb      	bcc.n	800037e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000386:	f000 f97d 	bl	8000684 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800038a:	f7ff ff07 	bl	800019c <main>

0800038e <LoopForever>:

LoopForever:
  b LoopForever
 800038e:	e7fe      	b.n	800038e <LoopForever>
  ldr   r0, =_estack
 8000390:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000394:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000398:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800039c:	08001284 	.word	0x08001284
  ldr r2, =_sbss
 80003a0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003a4:	200001c8 	.word	0x200001c8

080003a8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a8:	e7fe      	b.n	80003a8 <ADC1_2_IRQHandler>
	...

080003ac <std>:
 80003ac:	2300      	movs	r3, #0
 80003ae:	b510      	push	{r4, lr}
 80003b0:	4604      	mov	r4, r0
 80003b2:	e9c0 3300 	strd	r3, r3, [r0]
 80003b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003ba:	6083      	str	r3, [r0, #8]
 80003bc:	8181      	strh	r1, [r0, #12]
 80003be:	6643      	str	r3, [r0, #100]	@ 0x64
 80003c0:	81c2      	strh	r2, [r0, #14]
 80003c2:	6183      	str	r3, [r0, #24]
 80003c4:	4619      	mov	r1, r3
 80003c6:	2208      	movs	r2, #8
 80003c8:	305c      	adds	r0, #92	@ 0x5c
 80003ca:	f000 f906 	bl	80005da <memset>
 80003ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000404 <std+0x58>)
 80003d0:	6224      	str	r4, [r4, #32]
 80003d2:	6263      	str	r3, [r4, #36]	@ 0x24
 80003d4:	4b0c      	ldr	r3, [pc, #48]	@ (8000408 <std+0x5c>)
 80003d6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003d8:	4b0c      	ldr	r3, [pc, #48]	@ (800040c <std+0x60>)
 80003da:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003dc:	4b0c      	ldr	r3, [pc, #48]	@ (8000410 <std+0x64>)
 80003de:	6323      	str	r3, [r4, #48]	@ 0x30
 80003e0:	4b0c      	ldr	r3, [pc, #48]	@ (8000414 <std+0x68>)
 80003e2:	429c      	cmp	r4, r3
 80003e4:	d006      	beq.n	80003f4 <std+0x48>
 80003e6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003ea:	4294      	cmp	r4, r2
 80003ec:	d002      	beq.n	80003f4 <std+0x48>
 80003ee:	33d0      	adds	r3, #208	@ 0xd0
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d105      	bne.n	8000400 <std+0x54>
 80003f4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80003f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003fc:	f000 b966 	b.w	80006cc <__retarget_lock_init_recursive>
 8000400:	bd10      	pop	{r4, pc}
 8000402:	bf00      	nop
 8000404:	08000555 	.word	0x08000555
 8000408:	08000577 	.word	0x08000577
 800040c:	080005af 	.word	0x080005af
 8000410:	080005d3 	.word	0x080005d3
 8000414:	2000007c 	.word	0x2000007c

08000418 <stdio_exit_handler>:
 8000418:	4a02      	ldr	r2, [pc, #8]	@ (8000424 <stdio_exit_handler+0xc>)
 800041a:	4903      	ldr	r1, [pc, #12]	@ (8000428 <stdio_exit_handler+0x10>)
 800041c:	4803      	ldr	r0, [pc, #12]	@ (800042c <stdio_exit_handler+0x14>)
 800041e:	f000 b869 	b.w	80004f4 <_fwalk_sglue>
 8000422:	bf00      	nop
 8000424:	20000000 	.word	0x20000000
 8000428:	08000f65 	.word	0x08000f65
 800042c:	20000010 	.word	0x20000010

08000430 <cleanup_stdio>:
 8000430:	6841      	ldr	r1, [r0, #4]
 8000432:	4b0c      	ldr	r3, [pc, #48]	@ (8000464 <cleanup_stdio+0x34>)
 8000434:	b510      	push	{r4, lr}
 8000436:	4299      	cmp	r1, r3
 8000438:	4604      	mov	r4, r0
 800043a:	d001      	beq.n	8000440 <cleanup_stdio+0x10>
 800043c:	f000 fd92 	bl	8000f64 <_fflush_r>
 8000440:	68a1      	ldr	r1, [r4, #8]
 8000442:	4b09      	ldr	r3, [pc, #36]	@ (8000468 <cleanup_stdio+0x38>)
 8000444:	4299      	cmp	r1, r3
 8000446:	d002      	beq.n	800044e <cleanup_stdio+0x1e>
 8000448:	4620      	mov	r0, r4
 800044a:	f000 fd8b 	bl	8000f64 <_fflush_r>
 800044e:	68e1      	ldr	r1, [r4, #12]
 8000450:	4b06      	ldr	r3, [pc, #24]	@ (800046c <cleanup_stdio+0x3c>)
 8000452:	4299      	cmp	r1, r3
 8000454:	d004      	beq.n	8000460 <cleanup_stdio+0x30>
 8000456:	4620      	mov	r0, r4
 8000458:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800045c:	f000 bd82 	b.w	8000f64 <_fflush_r>
 8000460:	bd10      	pop	{r4, pc}
 8000462:	bf00      	nop
 8000464:	2000007c 	.word	0x2000007c
 8000468:	200000e4 	.word	0x200000e4
 800046c:	2000014c 	.word	0x2000014c

08000470 <global_stdio_init.part.0>:
 8000470:	b510      	push	{r4, lr}
 8000472:	4b0b      	ldr	r3, [pc, #44]	@ (80004a0 <global_stdio_init.part.0+0x30>)
 8000474:	4c0b      	ldr	r4, [pc, #44]	@ (80004a4 <global_stdio_init.part.0+0x34>)
 8000476:	4a0c      	ldr	r2, [pc, #48]	@ (80004a8 <global_stdio_init.part.0+0x38>)
 8000478:	4620      	mov	r0, r4
 800047a:	601a      	str	r2, [r3, #0]
 800047c:	2104      	movs	r1, #4
 800047e:	2200      	movs	r2, #0
 8000480:	f7ff ff94 	bl	80003ac <std>
 8000484:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000488:	2201      	movs	r2, #1
 800048a:	2109      	movs	r1, #9
 800048c:	f7ff ff8e 	bl	80003ac <std>
 8000490:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000494:	2202      	movs	r2, #2
 8000496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800049a:	2112      	movs	r1, #18
 800049c:	f7ff bf86 	b.w	80003ac <std>
 80004a0:	200001b4 	.word	0x200001b4
 80004a4:	2000007c 	.word	0x2000007c
 80004a8:	08000419 	.word	0x08000419

080004ac <__sfp_lock_acquire>:
 80004ac:	4801      	ldr	r0, [pc, #4]	@ (80004b4 <__sfp_lock_acquire+0x8>)
 80004ae:	f000 b90e 	b.w	80006ce <__retarget_lock_acquire_recursive>
 80004b2:	bf00      	nop
 80004b4:	200001bd 	.word	0x200001bd

080004b8 <__sfp_lock_release>:
 80004b8:	4801      	ldr	r0, [pc, #4]	@ (80004c0 <__sfp_lock_release+0x8>)
 80004ba:	f000 b909 	b.w	80006d0 <__retarget_lock_release_recursive>
 80004be:	bf00      	nop
 80004c0:	200001bd 	.word	0x200001bd

080004c4 <__sinit>:
 80004c4:	b510      	push	{r4, lr}
 80004c6:	4604      	mov	r4, r0
 80004c8:	f7ff fff0 	bl	80004ac <__sfp_lock_acquire>
 80004cc:	6a23      	ldr	r3, [r4, #32]
 80004ce:	b11b      	cbz	r3, 80004d8 <__sinit+0x14>
 80004d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004d4:	f7ff bff0 	b.w	80004b8 <__sfp_lock_release>
 80004d8:	4b04      	ldr	r3, [pc, #16]	@ (80004ec <__sinit+0x28>)
 80004da:	6223      	str	r3, [r4, #32]
 80004dc:	4b04      	ldr	r3, [pc, #16]	@ (80004f0 <__sinit+0x2c>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d1f5      	bne.n	80004d0 <__sinit+0xc>
 80004e4:	f7ff ffc4 	bl	8000470 <global_stdio_init.part.0>
 80004e8:	e7f2      	b.n	80004d0 <__sinit+0xc>
 80004ea:	bf00      	nop
 80004ec:	08000431 	.word	0x08000431
 80004f0:	200001b4 	.word	0x200001b4

080004f4 <_fwalk_sglue>:
 80004f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80004f8:	4607      	mov	r7, r0
 80004fa:	4688      	mov	r8, r1
 80004fc:	4614      	mov	r4, r2
 80004fe:	2600      	movs	r6, #0
 8000500:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000504:	f1b9 0901 	subs.w	r9, r9, #1
 8000508:	d505      	bpl.n	8000516 <_fwalk_sglue+0x22>
 800050a:	6824      	ldr	r4, [r4, #0]
 800050c:	2c00      	cmp	r4, #0
 800050e:	d1f7      	bne.n	8000500 <_fwalk_sglue+0xc>
 8000510:	4630      	mov	r0, r6
 8000512:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000516:	89ab      	ldrh	r3, [r5, #12]
 8000518:	2b01      	cmp	r3, #1
 800051a:	d907      	bls.n	800052c <_fwalk_sglue+0x38>
 800051c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000520:	3301      	adds	r3, #1
 8000522:	d003      	beq.n	800052c <_fwalk_sglue+0x38>
 8000524:	4629      	mov	r1, r5
 8000526:	4638      	mov	r0, r7
 8000528:	47c0      	blx	r8
 800052a:	4306      	orrs	r6, r0
 800052c:	3568      	adds	r5, #104	@ 0x68
 800052e:	e7e9      	b.n	8000504 <_fwalk_sglue+0x10>

08000530 <iprintf>:
 8000530:	b40f      	push	{r0, r1, r2, r3}
 8000532:	b507      	push	{r0, r1, r2, lr}
 8000534:	4906      	ldr	r1, [pc, #24]	@ (8000550 <iprintf+0x20>)
 8000536:	ab04      	add	r3, sp, #16
 8000538:	6808      	ldr	r0, [r1, #0]
 800053a:	f853 2b04 	ldr.w	r2, [r3], #4
 800053e:	6881      	ldr	r1, [r0, #8]
 8000540:	9301      	str	r3, [sp, #4]
 8000542:	f000 f9e5 	bl	8000910 <_vfiprintf_r>
 8000546:	b003      	add	sp, #12
 8000548:	f85d eb04 	ldr.w	lr, [sp], #4
 800054c:	b004      	add	sp, #16
 800054e:	4770      	bx	lr
 8000550:	2000000c 	.word	0x2000000c

08000554 <__sread>:
 8000554:	b510      	push	{r4, lr}
 8000556:	460c      	mov	r4, r1
 8000558:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800055c:	f000 f868 	bl	8000630 <_read_r>
 8000560:	2800      	cmp	r0, #0
 8000562:	bfab      	itete	ge
 8000564:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000566:	89a3      	ldrhlt	r3, [r4, #12]
 8000568:	181b      	addge	r3, r3, r0
 800056a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800056e:	bfac      	ite	ge
 8000570:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000572:	81a3      	strhlt	r3, [r4, #12]
 8000574:	bd10      	pop	{r4, pc}

08000576 <__swrite>:
 8000576:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800057a:	461f      	mov	r7, r3
 800057c:	898b      	ldrh	r3, [r1, #12]
 800057e:	4605      	mov	r5, r0
 8000580:	05db      	lsls	r3, r3, #23
 8000582:	460c      	mov	r4, r1
 8000584:	4616      	mov	r6, r2
 8000586:	d505      	bpl.n	8000594 <__swrite+0x1e>
 8000588:	2302      	movs	r3, #2
 800058a:	2200      	movs	r2, #0
 800058c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000590:	f000 f83c 	bl	800060c <_lseek_r>
 8000594:	89a3      	ldrh	r3, [r4, #12]
 8000596:	4632      	mov	r2, r6
 8000598:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800059c:	81a3      	strh	r3, [r4, #12]
 800059e:	4628      	mov	r0, r5
 80005a0:	463b      	mov	r3, r7
 80005a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005aa:	f000 b853 	b.w	8000654 <_write_r>

080005ae <__sseek>:
 80005ae:	b510      	push	{r4, lr}
 80005b0:	460c      	mov	r4, r1
 80005b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005b6:	f000 f829 	bl	800060c <_lseek_r>
 80005ba:	1c43      	adds	r3, r0, #1
 80005bc:	89a3      	ldrh	r3, [r4, #12]
 80005be:	bf15      	itete	ne
 80005c0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80005c2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80005c6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80005ca:	81a3      	strheq	r3, [r4, #12]
 80005cc:	bf18      	it	ne
 80005ce:	81a3      	strhne	r3, [r4, #12]
 80005d0:	bd10      	pop	{r4, pc}

080005d2 <__sclose>:
 80005d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005d6:	f000 b809 	b.w	80005ec <_close_r>

080005da <memset>:
 80005da:	4603      	mov	r3, r0
 80005dc:	4402      	add	r2, r0
 80005de:	4293      	cmp	r3, r2
 80005e0:	d100      	bne.n	80005e4 <memset+0xa>
 80005e2:	4770      	bx	lr
 80005e4:	f803 1b01 	strb.w	r1, [r3], #1
 80005e8:	e7f9      	b.n	80005de <memset+0x4>
	...

080005ec <_close_r>:
 80005ec:	b538      	push	{r3, r4, r5, lr}
 80005ee:	2300      	movs	r3, #0
 80005f0:	4d05      	ldr	r5, [pc, #20]	@ (8000608 <_close_r+0x1c>)
 80005f2:	4604      	mov	r4, r0
 80005f4:	4608      	mov	r0, r1
 80005f6:	602b      	str	r3, [r5, #0]
 80005f8:	f7ff fe47 	bl	800028a <_close>
 80005fc:	1c43      	adds	r3, r0, #1
 80005fe:	d102      	bne.n	8000606 <_close_r+0x1a>
 8000600:	682b      	ldr	r3, [r5, #0]
 8000602:	b103      	cbz	r3, 8000606 <_close_r+0x1a>
 8000604:	6023      	str	r3, [r4, #0]
 8000606:	bd38      	pop	{r3, r4, r5, pc}
 8000608:	200001b8 	.word	0x200001b8

0800060c <_lseek_r>:
 800060c:	b538      	push	{r3, r4, r5, lr}
 800060e:	4604      	mov	r4, r0
 8000610:	4608      	mov	r0, r1
 8000612:	4611      	mov	r1, r2
 8000614:	2200      	movs	r2, #0
 8000616:	4d05      	ldr	r5, [pc, #20]	@ (800062c <_lseek_r+0x20>)
 8000618:	602a      	str	r2, [r5, #0]
 800061a:	461a      	mov	r2, r3
 800061c:	f7ff fe59 	bl	80002d2 <_lseek>
 8000620:	1c43      	adds	r3, r0, #1
 8000622:	d102      	bne.n	800062a <_lseek_r+0x1e>
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	b103      	cbz	r3, 800062a <_lseek_r+0x1e>
 8000628:	6023      	str	r3, [r4, #0]
 800062a:	bd38      	pop	{r3, r4, r5, pc}
 800062c:	200001b8 	.word	0x200001b8

08000630 <_read_r>:
 8000630:	b538      	push	{r3, r4, r5, lr}
 8000632:	4604      	mov	r4, r0
 8000634:	4608      	mov	r0, r1
 8000636:	4611      	mov	r1, r2
 8000638:	2200      	movs	r2, #0
 800063a:	4d05      	ldr	r5, [pc, #20]	@ (8000650 <_read_r+0x20>)
 800063c:	602a      	str	r2, [r5, #0]
 800063e:	461a      	mov	r2, r3
 8000640:	f7ff fdea 	bl	8000218 <_read>
 8000644:	1c43      	adds	r3, r0, #1
 8000646:	d102      	bne.n	800064e <_read_r+0x1e>
 8000648:	682b      	ldr	r3, [r5, #0]
 800064a:	b103      	cbz	r3, 800064e <_read_r+0x1e>
 800064c:	6023      	str	r3, [r4, #0]
 800064e:	bd38      	pop	{r3, r4, r5, pc}
 8000650:	200001b8 	.word	0x200001b8

08000654 <_write_r>:
 8000654:	b538      	push	{r3, r4, r5, lr}
 8000656:	4604      	mov	r4, r0
 8000658:	4608      	mov	r0, r1
 800065a:	4611      	mov	r1, r2
 800065c:	2200      	movs	r2, #0
 800065e:	4d05      	ldr	r5, [pc, #20]	@ (8000674 <_write_r+0x20>)
 8000660:	602a      	str	r2, [r5, #0]
 8000662:	461a      	mov	r2, r3
 8000664:	f7ff fdf5 	bl	8000252 <_write>
 8000668:	1c43      	adds	r3, r0, #1
 800066a:	d102      	bne.n	8000672 <_write_r+0x1e>
 800066c:	682b      	ldr	r3, [r5, #0]
 800066e:	b103      	cbz	r3, 8000672 <_write_r+0x1e>
 8000670:	6023      	str	r3, [r4, #0]
 8000672:	bd38      	pop	{r3, r4, r5, pc}
 8000674:	200001b8 	.word	0x200001b8

08000678 <__errno>:
 8000678:	4b01      	ldr	r3, [pc, #4]	@ (8000680 <__errno+0x8>)
 800067a:	6818      	ldr	r0, [r3, #0]
 800067c:	4770      	bx	lr
 800067e:	bf00      	nop
 8000680:	2000000c 	.word	0x2000000c

08000684 <__libc_init_array>:
 8000684:	b570      	push	{r4, r5, r6, lr}
 8000686:	2600      	movs	r6, #0
 8000688:	4d0c      	ldr	r5, [pc, #48]	@ (80006bc <__libc_init_array+0x38>)
 800068a:	4c0d      	ldr	r4, [pc, #52]	@ (80006c0 <__libc_init_array+0x3c>)
 800068c:	1b64      	subs	r4, r4, r5
 800068e:	10a4      	asrs	r4, r4, #2
 8000690:	42a6      	cmp	r6, r4
 8000692:	d109      	bne.n	80006a8 <__libc_init_array+0x24>
 8000694:	f000 fdc4 	bl	8001220 <_init>
 8000698:	2600      	movs	r6, #0
 800069a:	4d0a      	ldr	r5, [pc, #40]	@ (80006c4 <__libc_init_array+0x40>)
 800069c:	4c0a      	ldr	r4, [pc, #40]	@ (80006c8 <__libc_init_array+0x44>)
 800069e:	1b64      	subs	r4, r4, r5
 80006a0:	10a4      	asrs	r4, r4, #2
 80006a2:	42a6      	cmp	r6, r4
 80006a4:	d105      	bne.n	80006b2 <__libc_init_array+0x2e>
 80006a6:	bd70      	pop	{r4, r5, r6, pc}
 80006a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ac:	4798      	blx	r3
 80006ae:	3601      	adds	r6, #1
 80006b0:	e7ee      	b.n	8000690 <__libc_init_array+0xc>
 80006b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006b6:	4798      	blx	r3
 80006b8:	3601      	adds	r6, #1
 80006ba:	e7f2      	b.n	80006a2 <__libc_init_array+0x1e>
 80006bc:	0800127c 	.word	0x0800127c
 80006c0:	0800127c 	.word	0x0800127c
 80006c4:	0800127c 	.word	0x0800127c
 80006c8:	08001280 	.word	0x08001280

080006cc <__retarget_lock_init_recursive>:
 80006cc:	4770      	bx	lr

080006ce <__retarget_lock_acquire_recursive>:
 80006ce:	4770      	bx	lr

080006d0 <__retarget_lock_release_recursive>:
 80006d0:	4770      	bx	lr
	...

080006d4 <_free_r>:
 80006d4:	b538      	push	{r3, r4, r5, lr}
 80006d6:	4605      	mov	r5, r0
 80006d8:	2900      	cmp	r1, #0
 80006da:	d040      	beq.n	800075e <_free_r+0x8a>
 80006dc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80006e0:	1f0c      	subs	r4, r1, #4
 80006e2:	2b00      	cmp	r3, #0
 80006e4:	bfb8      	it	lt
 80006e6:	18e4      	addlt	r4, r4, r3
 80006e8:	f000 f8de 	bl	80008a8 <__malloc_lock>
 80006ec:	4a1c      	ldr	r2, [pc, #112]	@ (8000760 <_free_r+0x8c>)
 80006ee:	6813      	ldr	r3, [r2, #0]
 80006f0:	b933      	cbnz	r3, 8000700 <_free_r+0x2c>
 80006f2:	6063      	str	r3, [r4, #4]
 80006f4:	6014      	str	r4, [r2, #0]
 80006f6:	4628      	mov	r0, r5
 80006f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80006fc:	f000 b8da 	b.w	80008b4 <__malloc_unlock>
 8000700:	42a3      	cmp	r3, r4
 8000702:	d908      	bls.n	8000716 <_free_r+0x42>
 8000704:	6820      	ldr	r0, [r4, #0]
 8000706:	1821      	adds	r1, r4, r0
 8000708:	428b      	cmp	r3, r1
 800070a:	bf01      	itttt	eq
 800070c:	6819      	ldreq	r1, [r3, #0]
 800070e:	685b      	ldreq	r3, [r3, #4]
 8000710:	1809      	addeq	r1, r1, r0
 8000712:	6021      	streq	r1, [r4, #0]
 8000714:	e7ed      	b.n	80006f2 <_free_r+0x1e>
 8000716:	461a      	mov	r2, r3
 8000718:	685b      	ldr	r3, [r3, #4]
 800071a:	b10b      	cbz	r3, 8000720 <_free_r+0x4c>
 800071c:	42a3      	cmp	r3, r4
 800071e:	d9fa      	bls.n	8000716 <_free_r+0x42>
 8000720:	6811      	ldr	r1, [r2, #0]
 8000722:	1850      	adds	r0, r2, r1
 8000724:	42a0      	cmp	r0, r4
 8000726:	d10b      	bne.n	8000740 <_free_r+0x6c>
 8000728:	6820      	ldr	r0, [r4, #0]
 800072a:	4401      	add	r1, r0
 800072c:	1850      	adds	r0, r2, r1
 800072e:	4283      	cmp	r3, r0
 8000730:	6011      	str	r1, [r2, #0]
 8000732:	d1e0      	bne.n	80006f6 <_free_r+0x22>
 8000734:	6818      	ldr	r0, [r3, #0]
 8000736:	685b      	ldr	r3, [r3, #4]
 8000738:	4408      	add	r0, r1
 800073a:	6010      	str	r0, [r2, #0]
 800073c:	6053      	str	r3, [r2, #4]
 800073e:	e7da      	b.n	80006f6 <_free_r+0x22>
 8000740:	d902      	bls.n	8000748 <_free_r+0x74>
 8000742:	230c      	movs	r3, #12
 8000744:	602b      	str	r3, [r5, #0]
 8000746:	e7d6      	b.n	80006f6 <_free_r+0x22>
 8000748:	6820      	ldr	r0, [r4, #0]
 800074a:	1821      	adds	r1, r4, r0
 800074c:	428b      	cmp	r3, r1
 800074e:	bf01      	itttt	eq
 8000750:	6819      	ldreq	r1, [r3, #0]
 8000752:	685b      	ldreq	r3, [r3, #4]
 8000754:	1809      	addeq	r1, r1, r0
 8000756:	6021      	streq	r1, [r4, #0]
 8000758:	6063      	str	r3, [r4, #4]
 800075a:	6054      	str	r4, [r2, #4]
 800075c:	e7cb      	b.n	80006f6 <_free_r+0x22>
 800075e:	bd38      	pop	{r3, r4, r5, pc}
 8000760:	200001c4 	.word	0x200001c4

08000764 <sbrk_aligned>:
 8000764:	b570      	push	{r4, r5, r6, lr}
 8000766:	4e0f      	ldr	r6, [pc, #60]	@ (80007a4 <sbrk_aligned+0x40>)
 8000768:	460c      	mov	r4, r1
 800076a:	6831      	ldr	r1, [r6, #0]
 800076c:	4605      	mov	r5, r0
 800076e:	b911      	cbnz	r1, 8000776 <sbrk_aligned+0x12>
 8000770:	f000 fcb4 	bl	80010dc <_sbrk_r>
 8000774:	6030      	str	r0, [r6, #0]
 8000776:	4621      	mov	r1, r4
 8000778:	4628      	mov	r0, r5
 800077a:	f000 fcaf 	bl	80010dc <_sbrk_r>
 800077e:	1c43      	adds	r3, r0, #1
 8000780:	d103      	bne.n	800078a <sbrk_aligned+0x26>
 8000782:	f04f 34ff 	mov.w	r4, #4294967295
 8000786:	4620      	mov	r0, r4
 8000788:	bd70      	pop	{r4, r5, r6, pc}
 800078a:	1cc4      	adds	r4, r0, #3
 800078c:	f024 0403 	bic.w	r4, r4, #3
 8000790:	42a0      	cmp	r0, r4
 8000792:	d0f8      	beq.n	8000786 <sbrk_aligned+0x22>
 8000794:	1a21      	subs	r1, r4, r0
 8000796:	4628      	mov	r0, r5
 8000798:	f000 fca0 	bl	80010dc <_sbrk_r>
 800079c:	3001      	adds	r0, #1
 800079e:	d1f2      	bne.n	8000786 <sbrk_aligned+0x22>
 80007a0:	e7ef      	b.n	8000782 <sbrk_aligned+0x1e>
 80007a2:	bf00      	nop
 80007a4:	200001c0 	.word	0x200001c0

080007a8 <_malloc_r>:
 80007a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007ac:	1ccd      	adds	r5, r1, #3
 80007ae:	f025 0503 	bic.w	r5, r5, #3
 80007b2:	3508      	adds	r5, #8
 80007b4:	2d0c      	cmp	r5, #12
 80007b6:	bf38      	it	cc
 80007b8:	250c      	movcc	r5, #12
 80007ba:	2d00      	cmp	r5, #0
 80007bc:	4606      	mov	r6, r0
 80007be:	db01      	blt.n	80007c4 <_malloc_r+0x1c>
 80007c0:	42a9      	cmp	r1, r5
 80007c2:	d904      	bls.n	80007ce <_malloc_r+0x26>
 80007c4:	230c      	movs	r3, #12
 80007c6:	6033      	str	r3, [r6, #0]
 80007c8:	2000      	movs	r0, #0
 80007ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ce:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80008a4 <_malloc_r+0xfc>
 80007d2:	f000 f869 	bl	80008a8 <__malloc_lock>
 80007d6:	f8d8 3000 	ldr.w	r3, [r8]
 80007da:	461c      	mov	r4, r3
 80007dc:	bb44      	cbnz	r4, 8000830 <_malloc_r+0x88>
 80007de:	4629      	mov	r1, r5
 80007e0:	4630      	mov	r0, r6
 80007e2:	f7ff ffbf 	bl	8000764 <sbrk_aligned>
 80007e6:	1c43      	adds	r3, r0, #1
 80007e8:	4604      	mov	r4, r0
 80007ea:	d158      	bne.n	800089e <_malloc_r+0xf6>
 80007ec:	f8d8 4000 	ldr.w	r4, [r8]
 80007f0:	4627      	mov	r7, r4
 80007f2:	2f00      	cmp	r7, #0
 80007f4:	d143      	bne.n	800087e <_malloc_r+0xd6>
 80007f6:	2c00      	cmp	r4, #0
 80007f8:	d04b      	beq.n	8000892 <_malloc_r+0xea>
 80007fa:	6823      	ldr	r3, [r4, #0]
 80007fc:	4639      	mov	r1, r7
 80007fe:	4630      	mov	r0, r6
 8000800:	eb04 0903 	add.w	r9, r4, r3
 8000804:	f000 fc6a 	bl	80010dc <_sbrk_r>
 8000808:	4581      	cmp	r9, r0
 800080a:	d142      	bne.n	8000892 <_malloc_r+0xea>
 800080c:	6821      	ldr	r1, [r4, #0]
 800080e:	4630      	mov	r0, r6
 8000810:	1a6d      	subs	r5, r5, r1
 8000812:	4629      	mov	r1, r5
 8000814:	f7ff ffa6 	bl	8000764 <sbrk_aligned>
 8000818:	3001      	adds	r0, #1
 800081a:	d03a      	beq.n	8000892 <_malloc_r+0xea>
 800081c:	6823      	ldr	r3, [r4, #0]
 800081e:	442b      	add	r3, r5
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	f8d8 3000 	ldr.w	r3, [r8]
 8000826:	685a      	ldr	r2, [r3, #4]
 8000828:	bb62      	cbnz	r2, 8000884 <_malloc_r+0xdc>
 800082a:	f8c8 7000 	str.w	r7, [r8]
 800082e:	e00f      	b.n	8000850 <_malloc_r+0xa8>
 8000830:	6822      	ldr	r2, [r4, #0]
 8000832:	1b52      	subs	r2, r2, r5
 8000834:	d420      	bmi.n	8000878 <_malloc_r+0xd0>
 8000836:	2a0b      	cmp	r2, #11
 8000838:	d917      	bls.n	800086a <_malloc_r+0xc2>
 800083a:	1961      	adds	r1, r4, r5
 800083c:	42a3      	cmp	r3, r4
 800083e:	6025      	str	r5, [r4, #0]
 8000840:	bf18      	it	ne
 8000842:	6059      	strne	r1, [r3, #4]
 8000844:	6863      	ldr	r3, [r4, #4]
 8000846:	bf08      	it	eq
 8000848:	f8c8 1000 	streq.w	r1, [r8]
 800084c:	5162      	str	r2, [r4, r5]
 800084e:	604b      	str	r3, [r1, #4]
 8000850:	4630      	mov	r0, r6
 8000852:	f000 f82f 	bl	80008b4 <__malloc_unlock>
 8000856:	f104 000b 	add.w	r0, r4, #11
 800085a:	1d23      	adds	r3, r4, #4
 800085c:	f020 0007 	bic.w	r0, r0, #7
 8000860:	1ac2      	subs	r2, r0, r3
 8000862:	bf1c      	itt	ne
 8000864:	1a1b      	subne	r3, r3, r0
 8000866:	50a3      	strne	r3, [r4, r2]
 8000868:	e7af      	b.n	80007ca <_malloc_r+0x22>
 800086a:	6862      	ldr	r2, [r4, #4]
 800086c:	42a3      	cmp	r3, r4
 800086e:	bf0c      	ite	eq
 8000870:	f8c8 2000 	streq.w	r2, [r8]
 8000874:	605a      	strne	r2, [r3, #4]
 8000876:	e7eb      	b.n	8000850 <_malloc_r+0xa8>
 8000878:	4623      	mov	r3, r4
 800087a:	6864      	ldr	r4, [r4, #4]
 800087c:	e7ae      	b.n	80007dc <_malloc_r+0x34>
 800087e:	463c      	mov	r4, r7
 8000880:	687f      	ldr	r7, [r7, #4]
 8000882:	e7b6      	b.n	80007f2 <_malloc_r+0x4a>
 8000884:	461a      	mov	r2, r3
 8000886:	685b      	ldr	r3, [r3, #4]
 8000888:	42a3      	cmp	r3, r4
 800088a:	d1fb      	bne.n	8000884 <_malloc_r+0xdc>
 800088c:	2300      	movs	r3, #0
 800088e:	6053      	str	r3, [r2, #4]
 8000890:	e7de      	b.n	8000850 <_malloc_r+0xa8>
 8000892:	230c      	movs	r3, #12
 8000894:	4630      	mov	r0, r6
 8000896:	6033      	str	r3, [r6, #0]
 8000898:	f000 f80c 	bl	80008b4 <__malloc_unlock>
 800089c:	e794      	b.n	80007c8 <_malloc_r+0x20>
 800089e:	6005      	str	r5, [r0, #0]
 80008a0:	e7d6      	b.n	8000850 <_malloc_r+0xa8>
 80008a2:	bf00      	nop
 80008a4:	200001c4 	.word	0x200001c4

080008a8 <__malloc_lock>:
 80008a8:	4801      	ldr	r0, [pc, #4]	@ (80008b0 <__malloc_lock+0x8>)
 80008aa:	f7ff bf10 	b.w	80006ce <__retarget_lock_acquire_recursive>
 80008ae:	bf00      	nop
 80008b0:	200001bc 	.word	0x200001bc

080008b4 <__malloc_unlock>:
 80008b4:	4801      	ldr	r0, [pc, #4]	@ (80008bc <__malloc_unlock+0x8>)
 80008b6:	f7ff bf0b 	b.w	80006d0 <__retarget_lock_release_recursive>
 80008ba:	bf00      	nop
 80008bc:	200001bc 	.word	0x200001bc

080008c0 <__sfputc_r>:
 80008c0:	6893      	ldr	r3, [r2, #8]
 80008c2:	b410      	push	{r4}
 80008c4:	3b01      	subs	r3, #1
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	6093      	str	r3, [r2, #8]
 80008ca:	da07      	bge.n	80008dc <__sfputc_r+0x1c>
 80008cc:	6994      	ldr	r4, [r2, #24]
 80008ce:	42a3      	cmp	r3, r4
 80008d0:	db01      	blt.n	80008d6 <__sfputc_r+0x16>
 80008d2:	290a      	cmp	r1, #10
 80008d4:	d102      	bne.n	80008dc <__sfputc_r+0x1c>
 80008d6:	bc10      	pop	{r4}
 80008d8:	f000 bb6c 	b.w	8000fb4 <__swbuf_r>
 80008dc:	6813      	ldr	r3, [r2, #0]
 80008de:	1c58      	adds	r0, r3, #1
 80008e0:	6010      	str	r0, [r2, #0]
 80008e2:	7019      	strb	r1, [r3, #0]
 80008e4:	4608      	mov	r0, r1
 80008e6:	bc10      	pop	{r4}
 80008e8:	4770      	bx	lr

080008ea <__sfputs_r>:
 80008ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ec:	4606      	mov	r6, r0
 80008ee:	460f      	mov	r7, r1
 80008f0:	4614      	mov	r4, r2
 80008f2:	18d5      	adds	r5, r2, r3
 80008f4:	42ac      	cmp	r4, r5
 80008f6:	d101      	bne.n	80008fc <__sfputs_r+0x12>
 80008f8:	2000      	movs	r0, #0
 80008fa:	e007      	b.n	800090c <__sfputs_r+0x22>
 80008fc:	463a      	mov	r2, r7
 80008fe:	4630      	mov	r0, r6
 8000900:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000904:	f7ff ffdc 	bl	80008c0 <__sfputc_r>
 8000908:	1c43      	adds	r3, r0, #1
 800090a:	d1f3      	bne.n	80008f4 <__sfputs_r+0xa>
 800090c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000910 <_vfiprintf_r>:
 8000910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000914:	460d      	mov	r5, r1
 8000916:	4614      	mov	r4, r2
 8000918:	4698      	mov	r8, r3
 800091a:	4606      	mov	r6, r0
 800091c:	b09d      	sub	sp, #116	@ 0x74
 800091e:	b118      	cbz	r0, 8000928 <_vfiprintf_r+0x18>
 8000920:	6a03      	ldr	r3, [r0, #32]
 8000922:	b90b      	cbnz	r3, 8000928 <_vfiprintf_r+0x18>
 8000924:	f7ff fdce 	bl	80004c4 <__sinit>
 8000928:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800092a:	07d9      	lsls	r1, r3, #31
 800092c:	d405      	bmi.n	800093a <_vfiprintf_r+0x2a>
 800092e:	89ab      	ldrh	r3, [r5, #12]
 8000930:	059a      	lsls	r2, r3, #22
 8000932:	d402      	bmi.n	800093a <_vfiprintf_r+0x2a>
 8000934:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000936:	f7ff feca 	bl	80006ce <__retarget_lock_acquire_recursive>
 800093a:	89ab      	ldrh	r3, [r5, #12]
 800093c:	071b      	lsls	r3, r3, #28
 800093e:	d501      	bpl.n	8000944 <_vfiprintf_r+0x34>
 8000940:	692b      	ldr	r3, [r5, #16]
 8000942:	b99b      	cbnz	r3, 800096c <_vfiprintf_r+0x5c>
 8000944:	4629      	mov	r1, r5
 8000946:	4630      	mov	r0, r6
 8000948:	f000 fb72 	bl	8001030 <__swsetup_r>
 800094c:	b170      	cbz	r0, 800096c <_vfiprintf_r+0x5c>
 800094e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000950:	07dc      	lsls	r4, r3, #31
 8000952:	d504      	bpl.n	800095e <_vfiprintf_r+0x4e>
 8000954:	f04f 30ff 	mov.w	r0, #4294967295
 8000958:	b01d      	add	sp, #116	@ 0x74
 800095a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800095e:	89ab      	ldrh	r3, [r5, #12]
 8000960:	0598      	lsls	r0, r3, #22
 8000962:	d4f7      	bmi.n	8000954 <_vfiprintf_r+0x44>
 8000964:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000966:	f7ff feb3 	bl	80006d0 <__retarget_lock_release_recursive>
 800096a:	e7f3      	b.n	8000954 <_vfiprintf_r+0x44>
 800096c:	2300      	movs	r3, #0
 800096e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000970:	2320      	movs	r3, #32
 8000972:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000976:	2330      	movs	r3, #48	@ 0x30
 8000978:	f04f 0901 	mov.w	r9, #1
 800097c:	f8cd 800c 	str.w	r8, [sp, #12]
 8000980:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8000b2c <_vfiprintf_r+0x21c>
 8000984:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000988:	4623      	mov	r3, r4
 800098a:	469a      	mov	sl, r3
 800098c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000990:	b10a      	cbz	r2, 8000996 <_vfiprintf_r+0x86>
 8000992:	2a25      	cmp	r2, #37	@ 0x25
 8000994:	d1f9      	bne.n	800098a <_vfiprintf_r+0x7a>
 8000996:	ebba 0b04 	subs.w	fp, sl, r4
 800099a:	d00b      	beq.n	80009b4 <_vfiprintf_r+0xa4>
 800099c:	465b      	mov	r3, fp
 800099e:	4622      	mov	r2, r4
 80009a0:	4629      	mov	r1, r5
 80009a2:	4630      	mov	r0, r6
 80009a4:	f7ff ffa1 	bl	80008ea <__sfputs_r>
 80009a8:	3001      	adds	r0, #1
 80009aa:	f000 80a7 	beq.w	8000afc <_vfiprintf_r+0x1ec>
 80009ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80009b0:	445a      	add	r2, fp
 80009b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80009b4:	f89a 3000 	ldrb.w	r3, [sl]
 80009b8:	2b00      	cmp	r3, #0
 80009ba:	f000 809f 	beq.w	8000afc <_vfiprintf_r+0x1ec>
 80009be:	2300      	movs	r3, #0
 80009c0:	f04f 32ff 	mov.w	r2, #4294967295
 80009c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009c8:	f10a 0a01 	add.w	sl, sl, #1
 80009cc:	9304      	str	r3, [sp, #16]
 80009ce:	9307      	str	r3, [sp, #28]
 80009d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80009d4:	931a      	str	r3, [sp, #104]	@ 0x68
 80009d6:	4654      	mov	r4, sl
 80009d8:	2205      	movs	r2, #5
 80009da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009de:	4853      	ldr	r0, [pc, #332]	@ (8000b2c <_vfiprintf_r+0x21c>)
 80009e0:	f000 fb8c 	bl	80010fc <memchr>
 80009e4:	9a04      	ldr	r2, [sp, #16]
 80009e6:	b9d8      	cbnz	r0, 8000a20 <_vfiprintf_r+0x110>
 80009e8:	06d1      	lsls	r1, r2, #27
 80009ea:	bf44      	itt	mi
 80009ec:	2320      	movmi	r3, #32
 80009ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80009f2:	0713      	lsls	r3, r2, #28
 80009f4:	bf44      	itt	mi
 80009f6:	232b      	movmi	r3, #43	@ 0x2b
 80009f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80009fc:	f89a 3000 	ldrb.w	r3, [sl]
 8000a00:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a02:	d015      	beq.n	8000a30 <_vfiprintf_r+0x120>
 8000a04:	4654      	mov	r4, sl
 8000a06:	2000      	movs	r0, #0
 8000a08:	f04f 0c0a 	mov.w	ip, #10
 8000a0c:	9a07      	ldr	r2, [sp, #28]
 8000a0e:	4621      	mov	r1, r4
 8000a10:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a14:	3b30      	subs	r3, #48	@ 0x30
 8000a16:	2b09      	cmp	r3, #9
 8000a18:	d94b      	bls.n	8000ab2 <_vfiprintf_r+0x1a2>
 8000a1a:	b1b0      	cbz	r0, 8000a4a <_vfiprintf_r+0x13a>
 8000a1c:	9207      	str	r2, [sp, #28]
 8000a1e:	e014      	b.n	8000a4a <_vfiprintf_r+0x13a>
 8000a20:	eba0 0308 	sub.w	r3, r0, r8
 8000a24:	fa09 f303 	lsl.w	r3, r9, r3
 8000a28:	4313      	orrs	r3, r2
 8000a2a:	46a2      	mov	sl, r4
 8000a2c:	9304      	str	r3, [sp, #16]
 8000a2e:	e7d2      	b.n	80009d6 <_vfiprintf_r+0xc6>
 8000a30:	9b03      	ldr	r3, [sp, #12]
 8000a32:	1d19      	adds	r1, r3, #4
 8000a34:	681b      	ldr	r3, [r3, #0]
 8000a36:	9103      	str	r1, [sp, #12]
 8000a38:	2b00      	cmp	r3, #0
 8000a3a:	bfbb      	ittet	lt
 8000a3c:	425b      	neglt	r3, r3
 8000a3e:	f042 0202 	orrlt.w	r2, r2, #2
 8000a42:	9307      	strge	r3, [sp, #28]
 8000a44:	9307      	strlt	r3, [sp, #28]
 8000a46:	bfb8      	it	lt
 8000a48:	9204      	strlt	r2, [sp, #16]
 8000a4a:	7823      	ldrb	r3, [r4, #0]
 8000a4c:	2b2e      	cmp	r3, #46	@ 0x2e
 8000a4e:	d10a      	bne.n	8000a66 <_vfiprintf_r+0x156>
 8000a50:	7863      	ldrb	r3, [r4, #1]
 8000a52:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a54:	d132      	bne.n	8000abc <_vfiprintf_r+0x1ac>
 8000a56:	9b03      	ldr	r3, [sp, #12]
 8000a58:	3402      	adds	r4, #2
 8000a5a:	1d1a      	adds	r2, r3, #4
 8000a5c:	681b      	ldr	r3, [r3, #0]
 8000a5e:	9203      	str	r2, [sp, #12]
 8000a60:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000a64:	9305      	str	r3, [sp, #20]
 8000a66:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000b30 <_vfiprintf_r+0x220>
 8000a6a:	2203      	movs	r2, #3
 8000a6c:	4650      	mov	r0, sl
 8000a6e:	7821      	ldrb	r1, [r4, #0]
 8000a70:	f000 fb44 	bl	80010fc <memchr>
 8000a74:	b138      	cbz	r0, 8000a86 <_vfiprintf_r+0x176>
 8000a76:	2240      	movs	r2, #64	@ 0x40
 8000a78:	9b04      	ldr	r3, [sp, #16]
 8000a7a:	eba0 000a 	sub.w	r0, r0, sl
 8000a7e:	4082      	lsls	r2, r0
 8000a80:	4313      	orrs	r3, r2
 8000a82:	3401      	adds	r4, #1
 8000a84:	9304      	str	r3, [sp, #16]
 8000a86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a8a:	2206      	movs	r2, #6
 8000a8c:	4829      	ldr	r0, [pc, #164]	@ (8000b34 <_vfiprintf_r+0x224>)
 8000a8e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000a92:	f000 fb33 	bl	80010fc <memchr>
 8000a96:	2800      	cmp	r0, #0
 8000a98:	d03f      	beq.n	8000b1a <_vfiprintf_r+0x20a>
 8000a9a:	4b27      	ldr	r3, [pc, #156]	@ (8000b38 <_vfiprintf_r+0x228>)
 8000a9c:	bb1b      	cbnz	r3, 8000ae6 <_vfiprintf_r+0x1d6>
 8000a9e:	9b03      	ldr	r3, [sp, #12]
 8000aa0:	3307      	adds	r3, #7
 8000aa2:	f023 0307 	bic.w	r3, r3, #7
 8000aa6:	3308      	adds	r3, #8
 8000aa8:	9303      	str	r3, [sp, #12]
 8000aaa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000aac:	443b      	add	r3, r7
 8000aae:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ab0:	e76a      	b.n	8000988 <_vfiprintf_r+0x78>
 8000ab2:	460c      	mov	r4, r1
 8000ab4:	2001      	movs	r0, #1
 8000ab6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000aba:	e7a8      	b.n	8000a0e <_vfiprintf_r+0xfe>
 8000abc:	2300      	movs	r3, #0
 8000abe:	f04f 0c0a 	mov.w	ip, #10
 8000ac2:	4619      	mov	r1, r3
 8000ac4:	3401      	adds	r4, #1
 8000ac6:	9305      	str	r3, [sp, #20]
 8000ac8:	4620      	mov	r0, r4
 8000aca:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ace:	3a30      	subs	r2, #48	@ 0x30
 8000ad0:	2a09      	cmp	r2, #9
 8000ad2:	d903      	bls.n	8000adc <_vfiprintf_r+0x1cc>
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d0c6      	beq.n	8000a66 <_vfiprintf_r+0x156>
 8000ad8:	9105      	str	r1, [sp, #20]
 8000ada:	e7c4      	b.n	8000a66 <_vfiprintf_r+0x156>
 8000adc:	4604      	mov	r4, r0
 8000ade:	2301      	movs	r3, #1
 8000ae0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ae4:	e7f0      	b.n	8000ac8 <_vfiprintf_r+0x1b8>
 8000ae6:	ab03      	add	r3, sp, #12
 8000ae8:	9300      	str	r3, [sp, #0]
 8000aea:	462a      	mov	r2, r5
 8000aec:	4630      	mov	r0, r6
 8000aee:	4b13      	ldr	r3, [pc, #76]	@ (8000b3c <_vfiprintf_r+0x22c>)
 8000af0:	a904      	add	r1, sp, #16
 8000af2:	f3af 8000 	nop.w
 8000af6:	4607      	mov	r7, r0
 8000af8:	1c78      	adds	r0, r7, #1
 8000afa:	d1d6      	bne.n	8000aaa <_vfiprintf_r+0x19a>
 8000afc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000afe:	07d9      	lsls	r1, r3, #31
 8000b00:	d405      	bmi.n	8000b0e <_vfiprintf_r+0x1fe>
 8000b02:	89ab      	ldrh	r3, [r5, #12]
 8000b04:	059a      	lsls	r2, r3, #22
 8000b06:	d402      	bmi.n	8000b0e <_vfiprintf_r+0x1fe>
 8000b08:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b0a:	f7ff fde1 	bl	80006d0 <__retarget_lock_release_recursive>
 8000b0e:	89ab      	ldrh	r3, [r5, #12]
 8000b10:	065b      	lsls	r3, r3, #25
 8000b12:	f53f af1f 	bmi.w	8000954 <_vfiprintf_r+0x44>
 8000b16:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b18:	e71e      	b.n	8000958 <_vfiprintf_r+0x48>
 8000b1a:	ab03      	add	r3, sp, #12
 8000b1c:	9300      	str	r3, [sp, #0]
 8000b1e:	462a      	mov	r2, r5
 8000b20:	4630      	mov	r0, r6
 8000b22:	4b06      	ldr	r3, [pc, #24]	@ (8000b3c <_vfiprintf_r+0x22c>)
 8000b24:	a904      	add	r1, sp, #16
 8000b26:	f000 f87d 	bl	8000c24 <_printf_i>
 8000b2a:	e7e4      	b.n	8000af6 <_vfiprintf_r+0x1e6>
 8000b2c:	08001248 	.word	0x08001248
 8000b30:	0800124e 	.word	0x0800124e
 8000b34:	08001252 	.word	0x08001252
 8000b38:	00000000 	.word	0x00000000
 8000b3c:	080008eb 	.word	0x080008eb

08000b40 <_printf_common>:
 8000b40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b44:	4616      	mov	r6, r2
 8000b46:	4698      	mov	r8, r3
 8000b48:	688a      	ldr	r2, [r1, #8]
 8000b4a:	690b      	ldr	r3, [r1, #16]
 8000b4c:	4607      	mov	r7, r0
 8000b4e:	4293      	cmp	r3, r2
 8000b50:	bfb8      	it	lt
 8000b52:	4613      	movlt	r3, r2
 8000b54:	6033      	str	r3, [r6, #0]
 8000b56:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b5a:	460c      	mov	r4, r1
 8000b5c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b60:	b10a      	cbz	r2, 8000b66 <_printf_common+0x26>
 8000b62:	3301      	adds	r3, #1
 8000b64:	6033      	str	r3, [r6, #0]
 8000b66:	6823      	ldr	r3, [r4, #0]
 8000b68:	0699      	lsls	r1, r3, #26
 8000b6a:	bf42      	ittt	mi
 8000b6c:	6833      	ldrmi	r3, [r6, #0]
 8000b6e:	3302      	addmi	r3, #2
 8000b70:	6033      	strmi	r3, [r6, #0]
 8000b72:	6825      	ldr	r5, [r4, #0]
 8000b74:	f015 0506 	ands.w	r5, r5, #6
 8000b78:	d106      	bne.n	8000b88 <_printf_common+0x48>
 8000b7a:	f104 0a19 	add.w	sl, r4, #25
 8000b7e:	68e3      	ldr	r3, [r4, #12]
 8000b80:	6832      	ldr	r2, [r6, #0]
 8000b82:	1a9b      	subs	r3, r3, r2
 8000b84:	42ab      	cmp	r3, r5
 8000b86:	dc2b      	bgt.n	8000be0 <_printf_common+0xa0>
 8000b88:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000b8c:	6822      	ldr	r2, [r4, #0]
 8000b8e:	3b00      	subs	r3, #0
 8000b90:	bf18      	it	ne
 8000b92:	2301      	movne	r3, #1
 8000b94:	0692      	lsls	r2, r2, #26
 8000b96:	d430      	bmi.n	8000bfa <_printf_common+0xba>
 8000b98:	4641      	mov	r1, r8
 8000b9a:	4638      	mov	r0, r7
 8000b9c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000ba0:	47c8      	blx	r9
 8000ba2:	3001      	adds	r0, #1
 8000ba4:	d023      	beq.n	8000bee <_printf_common+0xae>
 8000ba6:	6823      	ldr	r3, [r4, #0]
 8000ba8:	6922      	ldr	r2, [r4, #16]
 8000baa:	f003 0306 	and.w	r3, r3, #6
 8000bae:	2b04      	cmp	r3, #4
 8000bb0:	bf14      	ite	ne
 8000bb2:	2500      	movne	r5, #0
 8000bb4:	6833      	ldreq	r3, [r6, #0]
 8000bb6:	f04f 0600 	mov.w	r6, #0
 8000bba:	bf08      	it	eq
 8000bbc:	68e5      	ldreq	r5, [r4, #12]
 8000bbe:	f104 041a 	add.w	r4, r4, #26
 8000bc2:	bf08      	it	eq
 8000bc4:	1aed      	subeq	r5, r5, r3
 8000bc6:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000bca:	bf08      	it	eq
 8000bcc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bd0:	4293      	cmp	r3, r2
 8000bd2:	bfc4      	itt	gt
 8000bd4:	1a9b      	subgt	r3, r3, r2
 8000bd6:	18ed      	addgt	r5, r5, r3
 8000bd8:	42b5      	cmp	r5, r6
 8000bda:	d11a      	bne.n	8000c12 <_printf_common+0xd2>
 8000bdc:	2000      	movs	r0, #0
 8000bde:	e008      	b.n	8000bf2 <_printf_common+0xb2>
 8000be0:	2301      	movs	r3, #1
 8000be2:	4652      	mov	r2, sl
 8000be4:	4641      	mov	r1, r8
 8000be6:	4638      	mov	r0, r7
 8000be8:	47c8      	blx	r9
 8000bea:	3001      	adds	r0, #1
 8000bec:	d103      	bne.n	8000bf6 <_printf_common+0xb6>
 8000bee:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bf6:	3501      	adds	r5, #1
 8000bf8:	e7c1      	b.n	8000b7e <_printf_common+0x3e>
 8000bfa:	2030      	movs	r0, #48	@ 0x30
 8000bfc:	18e1      	adds	r1, r4, r3
 8000bfe:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c02:	1c5a      	adds	r2, r3, #1
 8000c04:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c08:	4422      	add	r2, r4
 8000c0a:	3302      	adds	r3, #2
 8000c0c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c10:	e7c2      	b.n	8000b98 <_printf_common+0x58>
 8000c12:	2301      	movs	r3, #1
 8000c14:	4622      	mov	r2, r4
 8000c16:	4641      	mov	r1, r8
 8000c18:	4638      	mov	r0, r7
 8000c1a:	47c8      	blx	r9
 8000c1c:	3001      	adds	r0, #1
 8000c1e:	d0e6      	beq.n	8000bee <_printf_common+0xae>
 8000c20:	3601      	adds	r6, #1
 8000c22:	e7d9      	b.n	8000bd8 <_printf_common+0x98>

08000c24 <_printf_i>:
 8000c24:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c28:	7e0f      	ldrb	r7, [r1, #24]
 8000c2a:	4691      	mov	r9, r2
 8000c2c:	2f78      	cmp	r7, #120	@ 0x78
 8000c2e:	4680      	mov	r8, r0
 8000c30:	460c      	mov	r4, r1
 8000c32:	469a      	mov	sl, r3
 8000c34:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000c36:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c3a:	d807      	bhi.n	8000c4c <_printf_i+0x28>
 8000c3c:	2f62      	cmp	r7, #98	@ 0x62
 8000c3e:	d80a      	bhi.n	8000c56 <_printf_i+0x32>
 8000c40:	2f00      	cmp	r7, #0
 8000c42:	f000 80d3 	beq.w	8000dec <_printf_i+0x1c8>
 8000c46:	2f58      	cmp	r7, #88	@ 0x58
 8000c48:	f000 80ba 	beq.w	8000dc0 <_printf_i+0x19c>
 8000c4c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c50:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c54:	e03a      	b.n	8000ccc <_printf_i+0xa8>
 8000c56:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c5a:	2b15      	cmp	r3, #21
 8000c5c:	d8f6      	bhi.n	8000c4c <_printf_i+0x28>
 8000c5e:	a101      	add	r1, pc, #4	@ (adr r1, 8000c64 <_printf_i+0x40>)
 8000c60:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c64:	08000cbd 	.word	0x08000cbd
 8000c68:	08000cd1 	.word	0x08000cd1
 8000c6c:	08000c4d 	.word	0x08000c4d
 8000c70:	08000c4d 	.word	0x08000c4d
 8000c74:	08000c4d 	.word	0x08000c4d
 8000c78:	08000c4d 	.word	0x08000c4d
 8000c7c:	08000cd1 	.word	0x08000cd1
 8000c80:	08000c4d 	.word	0x08000c4d
 8000c84:	08000c4d 	.word	0x08000c4d
 8000c88:	08000c4d 	.word	0x08000c4d
 8000c8c:	08000c4d 	.word	0x08000c4d
 8000c90:	08000dd3 	.word	0x08000dd3
 8000c94:	08000cfb 	.word	0x08000cfb
 8000c98:	08000d8d 	.word	0x08000d8d
 8000c9c:	08000c4d 	.word	0x08000c4d
 8000ca0:	08000c4d 	.word	0x08000c4d
 8000ca4:	08000df5 	.word	0x08000df5
 8000ca8:	08000c4d 	.word	0x08000c4d
 8000cac:	08000cfb 	.word	0x08000cfb
 8000cb0:	08000c4d 	.word	0x08000c4d
 8000cb4:	08000c4d 	.word	0x08000c4d
 8000cb8:	08000d95 	.word	0x08000d95
 8000cbc:	6833      	ldr	r3, [r6, #0]
 8000cbe:	1d1a      	adds	r2, r3, #4
 8000cc0:	681b      	ldr	r3, [r3, #0]
 8000cc2:	6032      	str	r2, [r6, #0]
 8000cc4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cc8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000ccc:	2301      	movs	r3, #1
 8000cce:	e09e      	b.n	8000e0e <_printf_i+0x1ea>
 8000cd0:	6833      	ldr	r3, [r6, #0]
 8000cd2:	6820      	ldr	r0, [r4, #0]
 8000cd4:	1d19      	adds	r1, r3, #4
 8000cd6:	6031      	str	r1, [r6, #0]
 8000cd8:	0606      	lsls	r6, r0, #24
 8000cda:	d501      	bpl.n	8000ce0 <_printf_i+0xbc>
 8000cdc:	681d      	ldr	r5, [r3, #0]
 8000cde:	e003      	b.n	8000ce8 <_printf_i+0xc4>
 8000ce0:	0645      	lsls	r5, r0, #25
 8000ce2:	d5fb      	bpl.n	8000cdc <_printf_i+0xb8>
 8000ce4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ce8:	2d00      	cmp	r5, #0
 8000cea:	da03      	bge.n	8000cf4 <_printf_i+0xd0>
 8000cec:	232d      	movs	r3, #45	@ 0x2d
 8000cee:	426d      	negs	r5, r5
 8000cf0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000cf4:	230a      	movs	r3, #10
 8000cf6:	4859      	ldr	r0, [pc, #356]	@ (8000e5c <_printf_i+0x238>)
 8000cf8:	e011      	b.n	8000d1e <_printf_i+0xfa>
 8000cfa:	6821      	ldr	r1, [r4, #0]
 8000cfc:	6833      	ldr	r3, [r6, #0]
 8000cfe:	0608      	lsls	r0, r1, #24
 8000d00:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d04:	d402      	bmi.n	8000d0c <_printf_i+0xe8>
 8000d06:	0649      	lsls	r1, r1, #25
 8000d08:	bf48      	it	mi
 8000d0a:	b2ad      	uxthmi	r5, r5
 8000d0c:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d0e:	6033      	str	r3, [r6, #0]
 8000d10:	bf14      	ite	ne
 8000d12:	230a      	movne	r3, #10
 8000d14:	2308      	moveq	r3, #8
 8000d16:	4851      	ldr	r0, [pc, #324]	@ (8000e5c <_printf_i+0x238>)
 8000d18:	2100      	movs	r1, #0
 8000d1a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d1e:	6866      	ldr	r6, [r4, #4]
 8000d20:	2e00      	cmp	r6, #0
 8000d22:	bfa8      	it	ge
 8000d24:	6821      	ldrge	r1, [r4, #0]
 8000d26:	60a6      	str	r6, [r4, #8]
 8000d28:	bfa4      	itt	ge
 8000d2a:	f021 0104 	bicge.w	r1, r1, #4
 8000d2e:	6021      	strge	r1, [r4, #0]
 8000d30:	b90d      	cbnz	r5, 8000d36 <_printf_i+0x112>
 8000d32:	2e00      	cmp	r6, #0
 8000d34:	d04b      	beq.n	8000dce <_printf_i+0x1aa>
 8000d36:	4616      	mov	r6, r2
 8000d38:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d3c:	fb03 5711 	mls	r7, r3, r1, r5
 8000d40:	5dc7      	ldrb	r7, [r0, r7]
 8000d42:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d46:	462f      	mov	r7, r5
 8000d48:	42bb      	cmp	r3, r7
 8000d4a:	460d      	mov	r5, r1
 8000d4c:	d9f4      	bls.n	8000d38 <_printf_i+0x114>
 8000d4e:	2b08      	cmp	r3, #8
 8000d50:	d10b      	bne.n	8000d6a <_printf_i+0x146>
 8000d52:	6823      	ldr	r3, [r4, #0]
 8000d54:	07df      	lsls	r7, r3, #31
 8000d56:	d508      	bpl.n	8000d6a <_printf_i+0x146>
 8000d58:	6923      	ldr	r3, [r4, #16]
 8000d5a:	6861      	ldr	r1, [r4, #4]
 8000d5c:	4299      	cmp	r1, r3
 8000d5e:	bfde      	ittt	le
 8000d60:	2330      	movle	r3, #48	@ 0x30
 8000d62:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d66:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000d6a:	1b92      	subs	r2, r2, r6
 8000d6c:	6122      	str	r2, [r4, #16]
 8000d6e:	464b      	mov	r3, r9
 8000d70:	4621      	mov	r1, r4
 8000d72:	4640      	mov	r0, r8
 8000d74:	f8cd a000 	str.w	sl, [sp]
 8000d78:	aa03      	add	r2, sp, #12
 8000d7a:	f7ff fee1 	bl	8000b40 <_printf_common>
 8000d7e:	3001      	adds	r0, #1
 8000d80:	d14a      	bne.n	8000e18 <_printf_i+0x1f4>
 8000d82:	f04f 30ff 	mov.w	r0, #4294967295
 8000d86:	b004      	add	sp, #16
 8000d88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d8c:	6823      	ldr	r3, [r4, #0]
 8000d8e:	f043 0320 	orr.w	r3, r3, #32
 8000d92:	6023      	str	r3, [r4, #0]
 8000d94:	2778      	movs	r7, #120	@ 0x78
 8000d96:	4832      	ldr	r0, [pc, #200]	@ (8000e60 <_printf_i+0x23c>)
 8000d98:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000d9c:	6823      	ldr	r3, [r4, #0]
 8000d9e:	6831      	ldr	r1, [r6, #0]
 8000da0:	061f      	lsls	r7, r3, #24
 8000da2:	f851 5b04 	ldr.w	r5, [r1], #4
 8000da6:	d402      	bmi.n	8000dae <_printf_i+0x18a>
 8000da8:	065f      	lsls	r7, r3, #25
 8000daa:	bf48      	it	mi
 8000dac:	b2ad      	uxthmi	r5, r5
 8000dae:	6031      	str	r1, [r6, #0]
 8000db0:	07d9      	lsls	r1, r3, #31
 8000db2:	bf44      	itt	mi
 8000db4:	f043 0320 	orrmi.w	r3, r3, #32
 8000db8:	6023      	strmi	r3, [r4, #0]
 8000dba:	b11d      	cbz	r5, 8000dc4 <_printf_i+0x1a0>
 8000dbc:	2310      	movs	r3, #16
 8000dbe:	e7ab      	b.n	8000d18 <_printf_i+0xf4>
 8000dc0:	4826      	ldr	r0, [pc, #152]	@ (8000e5c <_printf_i+0x238>)
 8000dc2:	e7e9      	b.n	8000d98 <_printf_i+0x174>
 8000dc4:	6823      	ldr	r3, [r4, #0]
 8000dc6:	f023 0320 	bic.w	r3, r3, #32
 8000dca:	6023      	str	r3, [r4, #0]
 8000dcc:	e7f6      	b.n	8000dbc <_printf_i+0x198>
 8000dce:	4616      	mov	r6, r2
 8000dd0:	e7bd      	b.n	8000d4e <_printf_i+0x12a>
 8000dd2:	6833      	ldr	r3, [r6, #0]
 8000dd4:	6825      	ldr	r5, [r4, #0]
 8000dd6:	1d18      	adds	r0, r3, #4
 8000dd8:	6961      	ldr	r1, [r4, #20]
 8000dda:	6030      	str	r0, [r6, #0]
 8000ddc:	062e      	lsls	r6, r5, #24
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	d501      	bpl.n	8000de6 <_printf_i+0x1c2>
 8000de2:	6019      	str	r1, [r3, #0]
 8000de4:	e002      	b.n	8000dec <_printf_i+0x1c8>
 8000de6:	0668      	lsls	r0, r5, #25
 8000de8:	d5fb      	bpl.n	8000de2 <_printf_i+0x1be>
 8000dea:	8019      	strh	r1, [r3, #0]
 8000dec:	2300      	movs	r3, #0
 8000dee:	4616      	mov	r6, r2
 8000df0:	6123      	str	r3, [r4, #16]
 8000df2:	e7bc      	b.n	8000d6e <_printf_i+0x14a>
 8000df4:	6833      	ldr	r3, [r6, #0]
 8000df6:	2100      	movs	r1, #0
 8000df8:	1d1a      	adds	r2, r3, #4
 8000dfa:	6032      	str	r2, [r6, #0]
 8000dfc:	681e      	ldr	r6, [r3, #0]
 8000dfe:	6862      	ldr	r2, [r4, #4]
 8000e00:	4630      	mov	r0, r6
 8000e02:	f000 f97b 	bl	80010fc <memchr>
 8000e06:	b108      	cbz	r0, 8000e0c <_printf_i+0x1e8>
 8000e08:	1b80      	subs	r0, r0, r6
 8000e0a:	6060      	str	r0, [r4, #4]
 8000e0c:	6863      	ldr	r3, [r4, #4]
 8000e0e:	6123      	str	r3, [r4, #16]
 8000e10:	2300      	movs	r3, #0
 8000e12:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e16:	e7aa      	b.n	8000d6e <_printf_i+0x14a>
 8000e18:	4632      	mov	r2, r6
 8000e1a:	4649      	mov	r1, r9
 8000e1c:	4640      	mov	r0, r8
 8000e1e:	6923      	ldr	r3, [r4, #16]
 8000e20:	47d0      	blx	sl
 8000e22:	3001      	adds	r0, #1
 8000e24:	d0ad      	beq.n	8000d82 <_printf_i+0x15e>
 8000e26:	6823      	ldr	r3, [r4, #0]
 8000e28:	079b      	lsls	r3, r3, #30
 8000e2a:	d413      	bmi.n	8000e54 <_printf_i+0x230>
 8000e2c:	68e0      	ldr	r0, [r4, #12]
 8000e2e:	9b03      	ldr	r3, [sp, #12]
 8000e30:	4298      	cmp	r0, r3
 8000e32:	bfb8      	it	lt
 8000e34:	4618      	movlt	r0, r3
 8000e36:	e7a6      	b.n	8000d86 <_printf_i+0x162>
 8000e38:	2301      	movs	r3, #1
 8000e3a:	4632      	mov	r2, r6
 8000e3c:	4649      	mov	r1, r9
 8000e3e:	4640      	mov	r0, r8
 8000e40:	47d0      	blx	sl
 8000e42:	3001      	adds	r0, #1
 8000e44:	d09d      	beq.n	8000d82 <_printf_i+0x15e>
 8000e46:	3501      	adds	r5, #1
 8000e48:	68e3      	ldr	r3, [r4, #12]
 8000e4a:	9903      	ldr	r1, [sp, #12]
 8000e4c:	1a5b      	subs	r3, r3, r1
 8000e4e:	42ab      	cmp	r3, r5
 8000e50:	dcf2      	bgt.n	8000e38 <_printf_i+0x214>
 8000e52:	e7eb      	b.n	8000e2c <_printf_i+0x208>
 8000e54:	2500      	movs	r5, #0
 8000e56:	f104 0619 	add.w	r6, r4, #25
 8000e5a:	e7f5      	b.n	8000e48 <_printf_i+0x224>
 8000e5c:	08001259 	.word	0x08001259
 8000e60:	0800126a 	.word	0x0800126a

08000e64 <__sflush_r>:
 8000e64:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e6a:	0716      	lsls	r6, r2, #28
 8000e6c:	4605      	mov	r5, r0
 8000e6e:	460c      	mov	r4, r1
 8000e70:	d454      	bmi.n	8000f1c <__sflush_r+0xb8>
 8000e72:	684b      	ldr	r3, [r1, #4]
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	dc02      	bgt.n	8000e7e <__sflush_r+0x1a>
 8000e78:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	dd48      	ble.n	8000f10 <__sflush_r+0xac>
 8000e7e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e80:	2e00      	cmp	r6, #0
 8000e82:	d045      	beq.n	8000f10 <__sflush_r+0xac>
 8000e84:	2300      	movs	r3, #0
 8000e86:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000e8a:	682f      	ldr	r7, [r5, #0]
 8000e8c:	6a21      	ldr	r1, [r4, #32]
 8000e8e:	602b      	str	r3, [r5, #0]
 8000e90:	d030      	beq.n	8000ef4 <__sflush_r+0x90>
 8000e92:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000e94:	89a3      	ldrh	r3, [r4, #12]
 8000e96:	0759      	lsls	r1, r3, #29
 8000e98:	d505      	bpl.n	8000ea6 <__sflush_r+0x42>
 8000e9a:	6863      	ldr	r3, [r4, #4]
 8000e9c:	1ad2      	subs	r2, r2, r3
 8000e9e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000ea0:	b10b      	cbz	r3, 8000ea6 <__sflush_r+0x42>
 8000ea2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ea4:	1ad2      	subs	r2, r2, r3
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	4628      	mov	r0, r5
 8000eaa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000eac:	6a21      	ldr	r1, [r4, #32]
 8000eae:	47b0      	blx	r6
 8000eb0:	1c43      	adds	r3, r0, #1
 8000eb2:	89a3      	ldrh	r3, [r4, #12]
 8000eb4:	d106      	bne.n	8000ec4 <__sflush_r+0x60>
 8000eb6:	6829      	ldr	r1, [r5, #0]
 8000eb8:	291d      	cmp	r1, #29
 8000eba:	d82b      	bhi.n	8000f14 <__sflush_r+0xb0>
 8000ebc:	4a28      	ldr	r2, [pc, #160]	@ (8000f60 <__sflush_r+0xfc>)
 8000ebe:	410a      	asrs	r2, r1
 8000ec0:	07d6      	lsls	r6, r2, #31
 8000ec2:	d427      	bmi.n	8000f14 <__sflush_r+0xb0>
 8000ec4:	2200      	movs	r2, #0
 8000ec6:	6062      	str	r2, [r4, #4]
 8000ec8:	6922      	ldr	r2, [r4, #16]
 8000eca:	04d9      	lsls	r1, r3, #19
 8000ecc:	6022      	str	r2, [r4, #0]
 8000ece:	d504      	bpl.n	8000eda <__sflush_r+0x76>
 8000ed0:	1c42      	adds	r2, r0, #1
 8000ed2:	d101      	bne.n	8000ed8 <__sflush_r+0x74>
 8000ed4:	682b      	ldr	r3, [r5, #0]
 8000ed6:	b903      	cbnz	r3, 8000eda <__sflush_r+0x76>
 8000ed8:	6560      	str	r0, [r4, #84]	@ 0x54
 8000eda:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000edc:	602f      	str	r7, [r5, #0]
 8000ede:	b1b9      	cbz	r1, 8000f10 <__sflush_r+0xac>
 8000ee0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	d002      	beq.n	8000eee <__sflush_r+0x8a>
 8000ee8:	4628      	mov	r0, r5
 8000eea:	f7ff fbf3 	bl	80006d4 <_free_r>
 8000eee:	2300      	movs	r3, #0
 8000ef0:	6363      	str	r3, [r4, #52]	@ 0x34
 8000ef2:	e00d      	b.n	8000f10 <__sflush_r+0xac>
 8000ef4:	2301      	movs	r3, #1
 8000ef6:	4628      	mov	r0, r5
 8000ef8:	47b0      	blx	r6
 8000efa:	4602      	mov	r2, r0
 8000efc:	1c50      	adds	r0, r2, #1
 8000efe:	d1c9      	bne.n	8000e94 <__sflush_r+0x30>
 8000f00:	682b      	ldr	r3, [r5, #0]
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d0c6      	beq.n	8000e94 <__sflush_r+0x30>
 8000f06:	2b1d      	cmp	r3, #29
 8000f08:	d001      	beq.n	8000f0e <__sflush_r+0xaa>
 8000f0a:	2b16      	cmp	r3, #22
 8000f0c:	d11d      	bne.n	8000f4a <__sflush_r+0xe6>
 8000f0e:	602f      	str	r7, [r5, #0]
 8000f10:	2000      	movs	r0, #0
 8000f12:	e021      	b.n	8000f58 <__sflush_r+0xf4>
 8000f14:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f18:	b21b      	sxth	r3, r3
 8000f1a:	e01a      	b.n	8000f52 <__sflush_r+0xee>
 8000f1c:	690f      	ldr	r7, [r1, #16]
 8000f1e:	2f00      	cmp	r7, #0
 8000f20:	d0f6      	beq.n	8000f10 <__sflush_r+0xac>
 8000f22:	0793      	lsls	r3, r2, #30
 8000f24:	bf18      	it	ne
 8000f26:	2300      	movne	r3, #0
 8000f28:	680e      	ldr	r6, [r1, #0]
 8000f2a:	bf08      	it	eq
 8000f2c:	694b      	ldreq	r3, [r1, #20]
 8000f2e:	1bf6      	subs	r6, r6, r7
 8000f30:	600f      	str	r7, [r1, #0]
 8000f32:	608b      	str	r3, [r1, #8]
 8000f34:	2e00      	cmp	r6, #0
 8000f36:	ddeb      	ble.n	8000f10 <__sflush_r+0xac>
 8000f38:	4633      	mov	r3, r6
 8000f3a:	463a      	mov	r2, r7
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	6a21      	ldr	r1, [r4, #32]
 8000f40:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000f44:	47e0      	blx	ip
 8000f46:	2800      	cmp	r0, #0
 8000f48:	dc07      	bgt.n	8000f5a <__sflush_r+0xf6>
 8000f4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f4e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f52:	f04f 30ff 	mov.w	r0, #4294967295
 8000f56:	81a3      	strh	r3, [r4, #12]
 8000f58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f5a:	4407      	add	r7, r0
 8000f5c:	1a36      	subs	r6, r6, r0
 8000f5e:	e7e9      	b.n	8000f34 <__sflush_r+0xd0>
 8000f60:	dfbffffe 	.word	0xdfbffffe

08000f64 <_fflush_r>:
 8000f64:	b538      	push	{r3, r4, r5, lr}
 8000f66:	690b      	ldr	r3, [r1, #16]
 8000f68:	4605      	mov	r5, r0
 8000f6a:	460c      	mov	r4, r1
 8000f6c:	b913      	cbnz	r3, 8000f74 <_fflush_r+0x10>
 8000f6e:	2500      	movs	r5, #0
 8000f70:	4628      	mov	r0, r5
 8000f72:	bd38      	pop	{r3, r4, r5, pc}
 8000f74:	b118      	cbz	r0, 8000f7e <_fflush_r+0x1a>
 8000f76:	6a03      	ldr	r3, [r0, #32]
 8000f78:	b90b      	cbnz	r3, 8000f7e <_fflush_r+0x1a>
 8000f7a:	f7ff faa3 	bl	80004c4 <__sinit>
 8000f7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f82:	2b00      	cmp	r3, #0
 8000f84:	d0f3      	beq.n	8000f6e <_fflush_r+0xa>
 8000f86:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000f88:	07d0      	lsls	r0, r2, #31
 8000f8a:	d404      	bmi.n	8000f96 <_fflush_r+0x32>
 8000f8c:	0599      	lsls	r1, r3, #22
 8000f8e:	d402      	bmi.n	8000f96 <_fflush_r+0x32>
 8000f90:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f92:	f7ff fb9c 	bl	80006ce <__retarget_lock_acquire_recursive>
 8000f96:	4628      	mov	r0, r5
 8000f98:	4621      	mov	r1, r4
 8000f9a:	f7ff ff63 	bl	8000e64 <__sflush_r>
 8000f9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000fa0:	4605      	mov	r5, r0
 8000fa2:	07da      	lsls	r2, r3, #31
 8000fa4:	d4e4      	bmi.n	8000f70 <_fflush_r+0xc>
 8000fa6:	89a3      	ldrh	r3, [r4, #12]
 8000fa8:	059b      	lsls	r3, r3, #22
 8000faa:	d4e1      	bmi.n	8000f70 <_fflush_r+0xc>
 8000fac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fae:	f7ff fb8f 	bl	80006d0 <__retarget_lock_release_recursive>
 8000fb2:	e7dd      	b.n	8000f70 <_fflush_r+0xc>

08000fb4 <__swbuf_r>:
 8000fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fb6:	460e      	mov	r6, r1
 8000fb8:	4614      	mov	r4, r2
 8000fba:	4605      	mov	r5, r0
 8000fbc:	b118      	cbz	r0, 8000fc6 <__swbuf_r+0x12>
 8000fbe:	6a03      	ldr	r3, [r0, #32]
 8000fc0:	b90b      	cbnz	r3, 8000fc6 <__swbuf_r+0x12>
 8000fc2:	f7ff fa7f 	bl	80004c4 <__sinit>
 8000fc6:	69a3      	ldr	r3, [r4, #24]
 8000fc8:	60a3      	str	r3, [r4, #8]
 8000fca:	89a3      	ldrh	r3, [r4, #12]
 8000fcc:	071a      	lsls	r2, r3, #28
 8000fce:	d501      	bpl.n	8000fd4 <__swbuf_r+0x20>
 8000fd0:	6923      	ldr	r3, [r4, #16]
 8000fd2:	b943      	cbnz	r3, 8000fe6 <__swbuf_r+0x32>
 8000fd4:	4621      	mov	r1, r4
 8000fd6:	4628      	mov	r0, r5
 8000fd8:	f000 f82a 	bl	8001030 <__swsetup_r>
 8000fdc:	b118      	cbz	r0, 8000fe6 <__swbuf_r+0x32>
 8000fde:	f04f 37ff 	mov.w	r7, #4294967295
 8000fe2:	4638      	mov	r0, r7
 8000fe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fe6:	6823      	ldr	r3, [r4, #0]
 8000fe8:	6922      	ldr	r2, [r4, #16]
 8000fea:	b2f6      	uxtb	r6, r6
 8000fec:	1a98      	subs	r0, r3, r2
 8000fee:	6963      	ldr	r3, [r4, #20]
 8000ff0:	4637      	mov	r7, r6
 8000ff2:	4283      	cmp	r3, r0
 8000ff4:	dc05      	bgt.n	8001002 <__swbuf_r+0x4e>
 8000ff6:	4621      	mov	r1, r4
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	f7ff ffb3 	bl	8000f64 <_fflush_r>
 8000ffe:	2800      	cmp	r0, #0
 8001000:	d1ed      	bne.n	8000fde <__swbuf_r+0x2a>
 8001002:	68a3      	ldr	r3, [r4, #8]
 8001004:	3b01      	subs	r3, #1
 8001006:	60a3      	str	r3, [r4, #8]
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	1c5a      	adds	r2, r3, #1
 800100c:	6022      	str	r2, [r4, #0]
 800100e:	701e      	strb	r6, [r3, #0]
 8001010:	6962      	ldr	r2, [r4, #20]
 8001012:	1c43      	adds	r3, r0, #1
 8001014:	429a      	cmp	r2, r3
 8001016:	d004      	beq.n	8001022 <__swbuf_r+0x6e>
 8001018:	89a3      	ldrh	r3, [r4, #12]
 800101a:	07db      	lsls	r3, r3, #31
 800101c:	d5e1      	bpl.n	8000fe2 <__swbuf_r+0x2e>
 800101e:	2e0a      	cmp	r6, #10
 8001020:	d1df      	bne.n	8000fe2 <__swbuf_r+0x2e>
 8001022:	4621      	mov	r1, r4
 8001024:	4628      	mov	r0, r5
 8001026:	f7ff ff9d 	bl	8000f64 <_fflush_r>
 800102a:	2800      	cmp	r0, #0
 800102c:	d0d9      	beq.n	8000fe2 <__swbuf_r+0x2e>
 800102e:	e7d6      	b.n	8000fde <__swbuf_r+0x2a>

08001030 <__swsetup_r>:
 8001030:	b538      	push	{r3, r4, r5, lr}
 8001032:	4b29      	ldr	r3, [pc, #164]	@ (80010d8 <__swsetup_r+0xa8>)
 8001034:	4605      	mov	r5, r0
 8001036:	6818      	ldr	r0, [r3, #0]
 8001038:	460c      	mov	r4, r1
 800103a:	b118      	cbz	r0, 8001044 <__swsetup_r+0x14>
 800103c:	6a03      	ldr	r3, [r0, #32]
 800103e:	b90b      	cbnz	r3, 8001044 <__swsetup_r+0x14>
 8001040:	f7ff fa40 	bl	80004c4 <__sinit>
 8001044:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001048:	0719      	lsls	r1, r3, #28
 800104a:	d422      	bmi.n	8001092 <__swsetup_r+0x62>
 800104c:	06da      	lsls	r2, r3, #27
 800104e:	d407      	bmi.n	8001060 <__swsetup_r+0x30>
 8001050:	2209      	movs	r2, #9
 8001052:	602a      	str	r2, [r5, #0]
 8001054:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001058:	f04f 30ff 	mov.w	r0, #4294967295
 800105c:	81a3      	strh	r3, [r4, #12]
 800105e:	e033      	b.n	80010c8 <__swsetup_r+0x98>
 8001060:	0758      	lsls	r0, r3, #29
 8001062:	d512      	bpl.n	800108a <__swsetup_r+0x5a>
 8001064:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001066:	b141      	cbz	r1, 800107a <__swsetup_r+0x4a>
 8001068:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800106c:	4299      	cmp	r1, r3
 800106e:	d002      	beq.n	8001076 <__swsetup_r+0x46>
 8001070:	4628      	mov	r0, r5
 8001072:	f7ff fb2f 	bl	80006d4 <_free_r>
 8001076:	2300      	movs	r3, #0
 8001078:	6363      	str	r3, [r4, #52]	@ 0x34
 800107a:	89a3      	ldrh	r3, [r4, #12]
 800107c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001080:	81a3      	strh	r3, [r4, #12]
 8001082:	2300      	movs	r3, #0
 8001084:	6063      	str	r3, [r4, #4]
 8001086:	6923      	ldr	r3, [r4, #16]
 8001088:	6023      	str	r3, [r4, #0]
 800108a:	89a3      	ldrh	r3, [r4, #12]
 800108c:	f043 0308 	orr.w	r3, r3, #8
 8001090:	81a3      	strh	r3, [r4, #12]
 8001092:	6923      	ldr	r3, [r4, #16]
 8001094:	b94b      	cbnz	r3, 80010aa <__swsetup_r+0x7a>
 8001096:	89a3      	ldrh	r3, [r4, #12]
 8001098:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800109c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80010a0:	d003      	beq.n	80010aa <__swsetup_r+0x7a>
 80010a2:	4621      	mov	r1, r4
 80010a4:	4628      	mov	r0, r5
 80010a6:	f000 f85c 	bl	8001162 <__smakebuf_r>
 80010aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010ae:	f013 0201 	ands.w	r2, r3, #1
 80010b2:	d00a      	beq.n	80010ca <__swsetup_r+0x9a>
 80010b4:	2200      	movs	r2, #0
 80010b6:	60a2      	str	r2, [r4, #8]
 80010b8:	6962      	ldr	r2, [r4, #20]
 80010ba:	4252      	negs	r2, r2
 80010bc:	61a2      	str	r2, [r4, #24]
 80010be:	6922      	ldr	r2, [r4, #16]
 80010c0:	b942      	cbnz	r2, 80010d4 <__swsetup_r+0xa4>
 80010c2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80010c6:	d1c5      	bne.n	8001054 <__swsetup_r+0x24>
 80010c8:	bd38      	pop	{r3, r4, r5, pc}
 80010ca:	0799      	lsls	r1, r3, #30
 80010cc:	bf58      	it	pl
 80010ce:	6962      	ldrpl	r2, [r4, #20]
 80010d0:	60a2      	str	r2, [r4, #8]
 80010d2:	e7f4      	b.n	80010be <__swsetup_r+0x8e>
 80010d4:	2000      	movs	r0, #0
 80010d6:	e7f7      	b.n	80010c8 <__swsetup_r+0x98>
 80010d8:	2000000c 	.word	0x2000000c

080010dc <_sbrk_r>:
 80010dc:	b538      	push	{r3, r4, r5, lr}
 80010de:	2300      	movs	r3, #0
 80010e0:	4d05      	ldr	r5, [pc, #20]	@ (80010f8 <_sbrk_r+0x1c>)
 80010e2:	4604      	mov	r4, r0
 80010e4:	4608      	mov	r0, r1
 80010e6:	602b      	str	r3, [r5, #0]
 80010e8:	f7ff f900 	bl	80002ec <_sbrk>
 80010ec:	1c43      	adds	r3, r0, #1
 80010ee:	d102      	bne.n	80010f6 <_sbrk_r+0x1a>
 80010f0:	682b      	ldr	r3, [r5, #0]
 80010f2:	b103      	cbz	r3, 80010f6 <_sbrk_r+0x1a>
 80010f4:	6023      	str	r3, [r4, #0]
 80010f6:	bd38      	pop	{r3, r4, r5, pc}
 80010f8:	200001b8 	.word	0x200001b8

080010fc <memchr>:
 80010fc:	4603      	mov	r3, r0
 80010fe:	b510      	push	{r4, lr}
 8001100:	b2c9      	uxtb	r1, r1
 8001102:	4402      	add	r2, r0
 8001104:	4293      	cmp	r3, r2
 8001106:	4618      	mov	r0, r3
 8001108:	d101      	bne.n	800110e <memchr+0x12>
 800110a:	2000      	movs	r0, #0
 800110c:	e003      	b.n	8001116 <memchr+0x1a>
 800110e:	7804      	ldrb	r4, [r0, #0]
 8001110:	3301      	adds	r3, #1
 8001112:	428c      	cmp	r4, r1
 8001114:	d1f6      	bne.n	8001104 <memchr+0x8>
 8001116:	bd10      	pop	{r4, pc}

08001118 <__swhatbuf_r>:
 8001118:	b570      	push	{r4, r5, r6, lr}
 800111a:	460c      	mov	r4, r1
 800111c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001120:	4615      	mov	r5, r2
 8001122:	2900      	cmp	r1, #0
 8001124:	461e      	mov	r6, r3
 8001126:	b096      	sub	sp, #88	@ 0x58
 8001128:	da0c      	bge.n	8001144 <__swhatbuf_r+0x2c>
 800112a:	89a3      	ldrh	r3, [r4, #12]
 800112c:	2100      	movs	r1, #0
 800112e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001132:	bf14      	ite	ne
 8001134:	2340      	movne	r3, #64	@ 0x40
 8001136:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800113a:	2000      	movs	r0, #0
 800113c:	6031      	str	r1, [r6, #0]
 800113e:	602b      	str	r3, [r5, #0]
 8001140:	b016      	add	sp, #88	@ 0x58
 8001142:	bd70      	pop	{r4, r5, r6, pc}
 8001144:	466a      	mov	r2, sp
 8001146:	f000 f849 	bl	80011dc <_fstat_r>
 800114a:	2800      	cmp	r0, #0
 800114c:	dbed      	blt.n	800112a <__swhatbuf_r+0x12>
 800114e:	9901      	ldr	r1, [sp, #4]
 8001150:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001154:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001158:	4259      	negs	r1, r3
 800115a:	4159      	adcs	r1, r3
 800115c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001160:	e7eb      	b.n	800113a <__swhatbuf_r+0x22>

08001162 <__smakebuf_r>:
 8001162:	898b      	ldrh	r3, [r1, #12]
 8001164:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001166:	079d      	lsls	r5, r3, #30
 8001168:	4606      	mov	r6, r0
 800116a:	460c      	mov	r4, r1
 800116c:	d507      	bpl.n	800117e <__smakebuf_r+0x1c>
 800116e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001172:	6023      	str	r3, [r4, #0]
 8001174:	6123      	str	r3, [r4, #16]
 8001176:	2301      	movs	r3, #1
 8001178:	6163      	str	r3, [r4, #20]
 800117a:	b003      	add	sp, #12
 800117c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800117e:	466a      	mov	r2, sp
 8001180:	ab01      	add	r3, sp, #4
 8001182:	f7ff ffc9 	bl	8001118 <__swhatbuf_r>
 8001186:	9f00      	ldr	r7, [sp, #0]
 8001188:	4605      	mov	r5, r0
 800118a:	4639      	mov	r1, r7
 800118c:	4630      	mov	r0, r6
 800118e:	f7ff fb0b 	bl	80007a8 <_malloc_r>
 8001192:	b948      	cbnz	r0, 80011a8 <__smakebuf_r+0x46>
 8001194:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001198:	059a      	lsls	r2, r3, #22
 800119a:	d4ee      	bmi.n	800117a <__smakebuf_r+0x18>
 800119c:	f023 0303 	bic.w	r3, r3, #3
 80011a0:	f043 0302 	orr.w	r3, r3, #2
 80011a4:	81a3      	strh	r3, [r4, #12]
 80011a6:	e7e2      	b.n	800116e <__smakebuf_r+0xc>
 80011a8:	89a3      	ldrh	r3, [r4, #12]
 80011aa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80011ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80011b2:	81a3      	strh	r3, [r4, #12]
 80011b4:	9b01      	ldr	r3, [sp, #4]
 80011b6:	6020      	str	r0, [r4, #0]
 80011b8:	b15b      	cbz	r3, 80011d2 <__smakebuf_r+0x70>
 80011ba:	4630      	mov	r0, r6
 80011bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011c0:	f000 f81e 	bl	8001200 <_isatty_r>
 80011c4:	b128      	cbz	r0, 80011d2 <__smakebuf_r+0x70>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	f023 0303 	bic.w	r3, r3, #3
 80011cc:	f043 0301 	orr.w	r3, r3, #1
 80011d0:	81a3      	strh	r3, [r4, #12]
 80011d2:	89a3      	ldrh	r3, [r4, #12]
 80011d4:	431d      	orrs	r5, r3
 80011d6:	81a5      	strh	r5, [r4, #12]
 80011d8:	e7cf      	b.n	800117a <__smakebuf_r+0x18>
	...

080011dc <_fstat_r>:
 80011dc:	b538      	push	{r3, r4, r5, lr}
 80011de:	2300      	movs	r3, #0
 80011e0:	4d06      	ldr	r5, [pc, #24]	@ (80011fc <_fstat_r+0x20>)
 80011e2:	4604      	mov	r4, r0
 80011e4:	4608      	mov	r0, r1
 80011e6:	4611      	mov	r1, r2
 80011e8:	602b      	str	r3, [r5, #0]
 80011ea:	f7ff f859 	bl	80002a0 <_fstat>
 80011ee:	1c43      	adds	r3, r0, #1
 80011f0:	d102      	bne.n	80011f8 <_fstat_r+0x1c>
 80011f2:	682b      	ldr	r3, [r5, #0]
 80011f4:	b103      	cbz	r3, 80011f8 <_fstat_r+0x1c>
 80011f6:	6023      	str	r3, [r4, #0]
 80011f8:	bd38      	pop	{r3, r4, r5, pc}
 80011fa:	bf00      	nop
 80011fc:	200001b8 	.word	0x200001b8

08001200 <_isatty_r>:
 8001200:	b538      	push	{r3, r4, r5, lr}
 8001202:	2300      	movs	r3, #0
 8001204:	4d05      	ldr	r5, [pc, #20]	@ (800121c <_isatty_r+0x1c>)
 8001206:	4604      	mov	r4, r0
 8001208:	4608      	mov	r0, r1
 800120a:	602b      	str	r3, [r5, #0]
 800120c:	f7ff f857 	bl	80002be <_isatty>
 8001210:	1c43      	adds	r3, r0, #1
 8001212:	d102      	bne.n	800121a <_isatty_r+0x1a>
 8001214:	682b      	ldr	r3, [r5, #0]
 8001216:	b103      	cbz	r3, 800121a <_isatty_r+0x1a>
 8001218:	6023      	str	r3, [r4, #0]
 800121a:	bd38      	pop	{r3, r4, r5, pc}
 800121c:	200001b8 	.word	0x200001b8

08001220 <_init>:
 8001220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001222:	bf00      	nop
 8001224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001226:	bc08      	pop	{r3}
 8001228:	469e      	mov	lr, r3
 800122a:	4770      	bx	lr

0800122c <_fini>:
 800122c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800122e:	bf00      	nop
 8001230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001232:	bc08      	pop	{r3}
 8001234:	469e      	mov	lr, r3
 8001236:	4770      	bx	lr
